using Mosa.DeviceSystem;
using System.Drawing;
using System.Collections.Generic;

namespace Mosa.Demo.VBEWorld.x86
{
	public static class Mouse
	{
		public static int X { get { return Utils.Mouse.X; } }

		public static int Y { get { return Utils.Mouse.Y; } }

		public static int State { get { return Utils.Mouse.MouseState; } }

		public static Color Color { get; set; }

		public static bool IsOnPaintingArea { get; set; }

		public static Image CursorImage { get; set; }

		// Sets the colours for the mouse - 0 is black and can be used as transparent in draw method.
		// 20 x 20 pixels allowed for mouse design.
		private static List<uint[]> MouseCols;

		public static void Initialize()
		{
			MouseCols = new List<uint[]>()
			{
				new uint[20] { 0x0000000011, 0x0000000011, 0x0000000000, 0x0000000000, 0x0000000000, 0x0000000000, 0x0000000000, 0x0000000000, 0x0000000000, 0x0000000000, 0x0000000000, 0x0000000000, 0x0000000000, 0x0000000000, 0x0000000000, 0x0000000000, 0x0000000000, 0x0000000000, 0x0000000000, 0x0000000000 },
				new uint[20] { 0x0000000011, 0x00FFFFFFFF, 0x0000000011, 0x0000000011, 0x0000000000, 0x0000000000, 0x0000000000, 0x0000000000, 0x0000000000, 0x0000000000, 0x0000000000, 0x0000000000, 0x0000000000, 0x0000000000, 0x0000000000, 0x0000000000, 0x0000000000, 0x0000000000, 0x0000000000, 0x0000000000 },
				new uint[20] { 0x0000000011, 0x00FFFFFFFF, 0x00FFFFFFFF, 0x00FFFFFFFF, 0x0000000011, 0x0000000011, 0x0000000000, 0x0000000000, 0x0000000000, 0x0000000000, 0x0000000000, 0x0000000000, 0x0000000000, 0x0000000000, 0x0000000000, 0x0000000000, 0x0000000000, 0x0000000000, 0x0000000000, 0x0000000000 },
				new uint[20] { 0x0000000011, 0x00FFFFFFFF, 0x00FFFFFFFF, 0x00FFFFFFFF, 0x00FFFFFFFF, 0x00FFFFFFFF, 0x0000000011, 0x0000000011, 0x0000000000, 0x0000000000, 0x0000000000, 0x0000000000, 0x0000000000, 0x0000000000, 0x0000000000, 0x0000000000, 0x0000000000, 0x0000000000, 0x0000000000, 0x0000000000 },
				new uint[20] { 0x0000000011, 0x00FFFFFFFF, 0x00FFFFFFFF, 0x00FFFFFFFF, 0x00FFFFFFFF, 0x00FFFFFFFF, 0x00FFFFFFFF, 0x00FFFFFFFF, 0x0000000011, 0x0000000011, 0x0000000000, 0x0000000000, 0x0000000000, 0x0000000000, 0x0000000000, 0x0000000000, 0x0000000000, 0x0000000000, 0x0000000000, 0x0000000000 },
				new uint[20] { 0x0000000011, 0x00FFFFFFFF, 0x00FFFFFFFF, 0x00FFFFFFFF, 0x00FFFFFFFF, 0x00FFFFFFFF, 0x00FFFFFFFF, 0x00FFFFFFFF, 0x00FFFFFFFF, 0x0000000011, 0x0000000011, 0x0000000000, 0x0000000000, 0x0000000000, 0x0000000000, 0x0000000000, 0x0000000000, 0x0000000000, 0x0000000000, 0x0000000000 },
				new uint[20] { 0x0000000011, 0x00FFFFFFFF, 0x00FFFFFFFF, 0x00FFFFFFFF, 0x00FFFFFFFF, 0x00FFFFFFFF, 0x00FFFFFFFF, 0x00FFFFFFFF, 0x0000000011, 0x0000000000, 0x0000000000, 0x0000000000, 0x0000000000, 0x0000000000, 0x0000000000, 0x0000000000, 0x0000000000, 0x0000000000, 0x0000000000, 0x0000000000 },
				new uint[20] { 0x0000000011, 0x00FFFFFFFF, 0x00FFFFFFFF, 0x00FFFFFFFF, 0x00FFFFFFFF, 0x00FFFFFFFF, 0x00FFFFFFFF, 0x0000000011, 0x0000000000, 0x0000000000, 0x0000000000, 0x0000000000, 0x0000000000, 0x0000000000, 0x0000000000, 0x0000000000, 0x0000000000, 0x0000000000, 0x0000000000, 0x0000000000 },
				new uint[20] { 0x0000000011, 0x00FFFFFFFF, 0x00FFFFFFFF, 0x00FFFFFFFF, 0x00FFFFFFFF, 0x00FFFFFFFF, 0x00FFFFFFFF, 0x0000000011, 0x0000000000, 0x0000000000, 0x0000000000, 0x0000000000, 0x0000000000, 0x0000000000, 0x0000000000, 0x0000000000, 0x0000000000, 0x0000000000, 0x0000000000, 0x0000000000 },
				new uint[20] { 0x0000000011, 0x00FFFFFFFF, 0x00FFFFFFFF, 0x00FFFFFFFF, 0x00FFFFFFFF, 0x00FFFFFFFF, 0x00FFFFFFFF, 0x00FFFFFFFF, 0x0000000011, 0x0000000000, 0x0000000000, 0x0000000000, 0x0000000000, 0x0000000000, 0x0000000000, 0x0000000000, 0x0000000000, 0x0000000000, 0x0000000000, 0x0000000000 },
				new uint[20] { 0x0000000011, 0x00FFFFFFFF, 0x00FFFFFFFF, 0x00FFFFFFFF, 0x00FFFFFFFF, 0x00FFFFFFFF, 0x00FFFFFFFF, 0x00FFFFFFFF, 0x00FFFFFFFF, 0x0000000011, 0x0000000000, 0x0000000000, 0x0000000000, 0x0000000000, 0x0000000000, 0x0000000000, 0x0000000000, 0x0000000000, 0x0000000000, 0x0000000000 },
				new uint[20] { 0x0000000011, 0x00FFFFFFFF, 0x00FFFFFFFF, 0x0000000011, 0x0000000011, 0x00FFFFFFFF, 0x00FFFFFFFF, 0x00FFFFFFFF, 0x00FFFFFFFF, 0x00FFFFFFFF, 0x0000000011, 0x0000000000, 0x0000000000, 0x0000000000, 0x0000000000, 0x0000000000, 0x0000000000, 0x0000000000, 0x0000000000, 0x0000000000 },
				new uint[20] { 0x0000000011, 0x00FFFFFFFF, 0x0000000011, 0x0000000000, 0x0000000000, 0x0000000011, 0x00FFFFFFFF, 0x00FFFFFFFF, 0x00FFFFFFFF, 0x00FFFFFFFF, 0x00FFFFFFFF, 0x0000000011, 0x0000000000, 0x0000000000, 0x0000000000, 0x0000000000, 0x0000000000, 0x0000000000, 0x0000000000, 0x0000000000 },
				new uint[20] { 0x0000000011, 0x0000000011, 0x0000000000, 0x0000000000, 0x0000000000, 0x0000000000, 0x0000000011, 0x00FFFFFFFF, 0x00FFFFFFFF, 0x00FFFFFFFF, 0x00FFFFFFFF, 0x00FFFFFFFF, 0x0000000011, 0x0000000000, 0x0000000000, 0x0000000000, 0x0000000000, 0x0000000000, 0x0000000000, 0x0000000000 },
				new uint[20] { 0x0000000011, 0x0000000000, 0x0000000000, 0x0000000000, 0x0000000000, 0x0000000000, 0x0000000000, 0x0000000011, 0x00FFFFFFFF, 0x00FFFFFFFF, 0x00FFFFFFFF, 0x00FFFFFFFF, 0x00FFFFFFFF, 0x0000000011, 0x0000000000, 0x0000000000, 0x0000000000, 0x0000000000, 0x0000000000, 0x0000000000 },
				new uint[20] { 0x0000000000, 0x0000000000, 0x0000000000, 0x0000000000, 0x0000000000, 0x0000000000, 0x0000000000, 0x0000000000, 0x0000000011, 0x00FFFFFFFF, 0x00FFFFFFFF, 0x00FFFFFFFF, 0x00FFFFFFFF, 0x00FFFFFFFF, 0x0000000011, 0x0000000000, 0x0000000000, 0x0000000000, 0x0000000000, 0x0000000000 },
				new uint[20] { 0x0000000000, 0x0000000000, 0x0000000000, 0x0000000000, 0x0000000000, 0x0000000000, 0x0000000000, 0x0000000000, 0x0000000000, 0x0000000011, 0x00FFFFFFFF, 0x00FFFFFFFF, 0x00FFFFFFFF, 0x00FFFFFFFF, 0x00FFFFFFFF, 0x0000000011, 0x0000000000, 0x0000000000, 0x0000000000, 0x0000000000 },
				new uint[20] { 0x0000000000, 0x0000000000, 0x0000000000, 0x0000000000, 0x0000000000, 0x0000000000, 0x0000000000, 0x0000000000, 0x0000000000, 0x0000000000, 0x0000000011, 0x00FFFFFFFF, 0x00FFFFFFFF, 0x00FFFFFFFF, 0x00FFFFFFFF, 0x00FFFFFFFF, 0x0000000011, 0x0000000000, 0x0000000000, 0x0000000000 },
				new uint[20] { 0x0000000000, 0x0000000000, 0x0000000000, 0x0000000000, 0x0000000000, 0x0000000000, 0x0000000000, 0x0000000000, 0x0000000000, 0x0000000000, 0x0000000000, 0x0000000011, 0x00FFFFFFFF, 0x00FFFFFFFF, 0x0000000011, 0x0000000011, 0x0000000000, 0x0000000000, 0x0000000000, 0x0000000000 },
				new uint[20] { 0x0000000000, 0x0000000000, 0x0000000000, 0x0000000000, 0x0000000000, 0x0000000000, 0x0000000000, 0x0000000000, 0x0000000000, 0x0000000000, 0x0000000000, 0x0000000000, 0x0000000011, 0x0000000011, 0x0000000000, 0x0000000000, 0x0000000000, 0x0000000000, 0x0000000000, 0x0000000000 }
			};
		}

		public static bool IsInBounds(int x, int y, int width, int height)
		{
			return Display.IsInBounds(X, x, Y, y, width, height);
		}

		public static void Draw()
		{
			if (!IsOnPaintingArea)
			{
				for (int x = 0; x < 20; x++)
					for (int y = 0; y < 20; y++)
					{
						uint color = MouseCols[y][x];

						if (color != 0)
							Display.DrawPoint(X + x, Y + y, Color.FromArgb((int)color));
					}

				//Display.DrawImage(X, Y, CursorImage, true);
			}
			else
				Display.DrawPoint(X, Y, Color);
		}
	}
}
