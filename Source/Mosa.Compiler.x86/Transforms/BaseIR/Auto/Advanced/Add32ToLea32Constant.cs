// Copyright (c) MOSA Project. Licensed under the New BSD License.

// This code was generated by an automated template.

using Mosa.Compiler.Framework;

namespace Mosa.Compiler.x86.Transforms.Optimizations.Auto.Advanced;

/// <summary>
/// Add32ToLea32Constant
/// </summary>
[Transform("x86.IRTransform.Auto.Advanced")]
public sealed class Add32ToLea32Constant : BaseTransform
{
	public Add32ToLea32Constant() : base(IR.Add32, TransformType.Auto | TransformType.Optimization, true)
	{
	}

	public override int Priority => 45;

	public override bool Match(Context context, Transform transform)
	{
		if (!IsConstant(context.Operand2))
			return false;

		return true;
	}

	public override void Transform(Context context, Transform transform)
	{
		var result = context.Result;

		var t1 = context.Operand1;
		var t2 = context.Operand2;

		var c1 = Operand.CreateConstant(0);
		var c2 = Operand.CreateConstant(1);

		context.SetInstruction(X86.Lea32, result, t1, c1, c2, t2);
	}
}
