// Copyright (c) MOSA Project. Licensed under the New BSD License.

// This code was generated by an automated template.

using Mosa.Compiler.Framework;

namespace Mosa.Compiler.x86.Transforms.Optimizations.Auto.StrengthReduction;

/// <summary>
/// And32ByMax
/// </summary>
[Transform("x86.Optimizations.Auto.StrengthReduction")]
public sealed class And32ByMax : BaseTransform
{
	public And32ByMax() : base(X86.And32, TransformType.Auto | TransformType.Optimization, true)
	{
	}

	public override bool Match(Context context, Transform transform)
	{
		if (!context.Operand2.IsResolvedConstant)
			return false;

		if (context.Operand2.ConstantUnsigned64 != 0xFFFFFFFF)
			return false;

		if (AreStatusFlagUsed(context))
			return false;

		return true;
	}

	public override void Transform(Context context, Transform transform)
	{
		var result = context.Result;

		var c1 = Operand.CreateConstant(0xFFFFFFFF);

		context.SetInstruction(X86.Mov32, result, c1);
	}
}

/// <summary>
/// And32ByMax_v1
/// </summary>
[Transform("x86.Optimizations.Auto.StrengthReduction")]
public sealed class And32ByMax_v1 : BaseTransform
{
	public And32ByMax_v1() : base(X86.And32, TransformType.Auto | TransformType.Optimization, true)
	{
	}

	public override bool Match(Context context, Transform transform)
	{
		if (!context.Operand1.IsResolvedConstant)
			return false;

		if (context.Operand1.ConstantUnsigned64 != 0xFFFFFFFF)
			return false;

		if (AreStatusFlagUsed(context))
			return false;

		return true;
	}

	public override void Transform(Context context, Transform transform)
	{
		var result = context.Result;

		var c1 = Operand.CreateConstant(0xFFFFFFFF);

		context.SetInstruction(X86.Mov32, result, c1);
	}
}
