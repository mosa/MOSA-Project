// Copyright (c) MOSA Project. Licensed under the New BSD License.

// This code was generated by an automated template.

using Mosa.Compiler.Framework;

namespace Mosa.Compiler.x86.Transforms.Optimizations.Auto.Rewrite;

[Transform()]
public sealed class Lea32RemoveScale : BaseTransform
{
	public Lea32RemoveScale() : base(X86.Lea32, TransformType.Auto | TransformType.Optimization, true)
	{
	}

	public override bool Match(Context context, Transform transform)
	{
		if (!context.Operand2.IsConstantZero)
			return false;

		if (IsOne(context.Operand3))
			return false;

		return true;
	}

	public override void Transform(Context context, Transform transform)
	{
		var result = context.Result;

		var t1 = context.Operand1;
		var t2 = context.GetOperand(3);

		var c1 = Operand.CreateConstant(0);
		var c2 = Operand.CreateConstant(1);

		context.SetInstruction(X86.Lea32, result, t1, c1, c2, t2);
	}
}
