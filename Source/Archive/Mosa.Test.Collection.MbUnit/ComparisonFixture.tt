<#@ include file="../TemplateLibrary.txt" #>

using System;
using System.Collections.Generic;
using System.Text;
using MbUnit.Framework;

using Mosa.Test.System;
using Mosa.Test.Numbers;
using Mosa.Test.Collection;

namespace Mosa.Test.Collection.MbUnit
{
	[TestFixture]
	public class ComparisonFixture : TestCompilerAdapter
	{
		public ComparisonFixture()
		{
			settings.AddReference("Mosa.Test.Collection.dll");
		}
		<# foreach (KeyValuePair<string, string> number1 in PositiveIntegersWithChar) 
		 foreach (KeyValuePair<string, string> number2 in PositiveIntegersWithChar) 
		foreach (KeyValuePair<string, string> compare in Comparisons) 
		{ #>
		
		[Test]
		public void Compare<#= compare.Value #><#= number1.Value #><#= number2.Value #>([<#= number1.Value #>]<#= number1.Key #> a, [<#= number2.Value #>]<#= number2.Key #> b)
		{
			Assert.AreEqual(ComparisonTests.Compare<#= compare.Value #><#= number1.Value #><#= number2.Value #>(a, b), Run<bool>("Mosa.Test.Collection", "ComparisonTests", "Compare<#= compare.Value #><#= number1.Value #><#= number2.Value #>", a, b));
		}
		<# } #>
		
		<# foreach (KeyValuePair<string, string> number1 in NegativeIntegers) 
		 foreach (KeyValuePair<string, string> number2 in NegativeIntegers) 
		foreach (KeyValuePair<string, string> compare in Comparisons) 
		{ #>
		
		[Test]
		public void Compare<#= compare.Value #><#= number1.Value #><#= number2.Value #>([<#= number1.Value #>]<#= number1.Key #> a, [<#= number2.Value #>]<#= number2.Key #> b)
		{
			Assert.AreEqual(ComparisonTests.Compare<#= compare.Value #><#= number1.Value #><#= number2.Value #>(a, b), Run<bool>("Mosa.Test.Collection", "ComparisonTests", "Compare<#= compare.Value #><#= number1.Value #><#= number2.Value #>", a, b));
		}
		<# } #>
	}
}
