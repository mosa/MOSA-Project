// Copyright (c) MOSA Project. Licensed under the New BSD License.

// This code was generated by an automated template.

using Mosa.Platform.x86;
using Mosa.Compiler.Framework;
using Mosa.Compiler.Framework.Transforms;

namespace Mosa.Platform.x86.Transforms.Optimizations.Auto.Ordering
{
	/// <summary>
	/// Addsd
	/// </summary>
	public sealed class Addsd : BaseTransform
	{
		public Addsd() : base(X86.Addsd, TransformType.Auto | TransformType.Optimization)
		{
		}

		public override int Priority => 10;

		public override bool Match(Context context, TransformContext transform)
		{
			if (!IsVirtualRegister(context.Operand1))
				return false;

			if (!IsVirtualRegister(context.Operand2))
				return false;

			if (!IsGreater(UseCount(context.Operand1), UseCount(context.Operand2)))
				return false;

			if (IsResultAndOperand1Same(context))
				return false;

			return true;
		}

		public override void Transform(Context context, TransformContext transform)
		{
			var result = context.Result;

			var t1 = context.Operand1;
			var t2 = context.Operand2;

			context.SetInstruction(X86.Addsd, result, t2, t1);
		}
	}
}
