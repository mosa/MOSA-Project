// Copyright (c) MOSA Project. Licensed under the New BSD License.

// This code was generated by an automated template.

using Mosa.Compiler.Framework;

namespace Mosa.Compiler.Framework.Transform.Auto.Algebraic
{
	/// <summary>
	/// Signed64PerfectSquareFormula
	/// </summary>
	public sealed class Signed64PerfectSquareFormula : BaseTransformation
	{
		public Signed64PerfectSquareFormula() : base(IRInstruction.Add64)
		{
		}

		public override bool Match(Context context, TransformContext transformContext)
		{
			if (!context.Operand1.IsVirtualRegister)
				return false;

			if (context.Operand1.Definitions.Count != 1)
				return false;

			if (context.Operand1.Definitions[0].Instruction != IRInstruction.Add64)
				return false;

			if (!context.Operand1.Definitions[0].Operand1.IsVirtualRegister)
				return false;

			if (!context.Operand1.Definitions[0].Operand2.IsVirtualRegister)
				return false;

			if (context.Operand1.Definitions[0].Operand1.Definitions.Count != 1)
				return false;

			if (context.Operand1.Definitions[0].Operand1.Definitions[0].Instruction != IRInstruction.MulSigned64)
				return false;

			if (context.Operand1.Definitions[0].Operand2.Definitions.Count != 1)
				return false;

			if (context.Operand1.Definitions[0].Operand2.Definitions[0].Instruction != IRInstruction.MulSigned64)
				return false;

			if (!AreSame(context.Operand1.Definitions[0].Operand1.Definitions[0].Operand1, context.Operand1.Definitions[0].Operand1.Definitions[0].Operand2))
				return false;

			if (!AreSame(context.Operand1.Definitions[0].Operand1.Definitions[0].Operand1, context.Operand1.Definitions[0].Operand2.Definitions[0].Operand2))
				return false;

			if (!IsResolvedConstant(context.Operand2))
				return false;

			if (!IsResolvedConstant(context.Operand1.Definitions[0].Operand2.Definitions[0].Operand1))
				return false;

			if (!IsEvenInteger(context.Operand1.Definitions[0].Operand2.Definitions[0].Operand1))
				return false;

			if (!IsEqual(To64(context.Operand2), Square64(DivUnsigned64(To64(context.Operand1.Definitions[0].Operand2.Definitions[0].Operand1), 2))))
				return false;

			return true;
		}

		public override void Transform(Context context, TransformContext transformContext)
		{
			var result = context.Result;

			var t1 = context.Operand1.Definitions[0].Operand1.Definitions[0].Operand1;
			var t2 = context.Operand1.Definitions[0].Operand2.Definitions[0].Operand1;

			var v1 = transformContext.AllocateVirtualRegister(transformContext.I8);
			var v2 = transformContext.AllocateVirtualRegister(transformContext.I8);

			var e1 = transformContext.CreateConstant(DivSigned64(ToSigned64(t2), 2));

			context.SetInstruction(IRInstruction.Add64, v1, t1, e1);
			context.AppendInstruction(IRInstruction.Add64, v2, t1, e1);
			context.AppendInstruction(IRInstruction.MulSigned64, result, v2, v1);
		}
	}

	/// <summary>
	/// Signed64PerfectSquareFormula_v1
	/// </summary>
	public sealed class Signed64PerfectSquareFormula_v1 : BaseTransformation
	{
		public Signed64PerfectSquareFormula_v1() : base(IRInstruction.Add64)
		{
		}

		public override bool Match(Context context, TransformContext transformContext)
		{
			if (!context.Operand2.IsVirtualRegister)
				return false;

			if (context.Operand2.Definitions.Count != 1)
				return false;

			if (context.Operand2.Definitions[0].Instruction != IRInstruction.Add64)
				return false;

			if (!context.Operand2.Definitions[0].Operand1.IsVirtualRegister)
				return false;

			if (!context.Operand2.Definitions[0].Operand2.IsVirtualRegister)
				return false;

			if (context.Operand2.Definitions[0].Operand1.Definitions.Count != 1)
				return false;

			if (context.Operand2.Definitions[0].Operand1.Definitions[0].Instruction != IRInstruction.MulSigned64)
				return false;

			if (context.Operand2.Definitions[0].Operand2.Definitions.Count != 1)
				return false;

			if (context.Operand2.Definitions[0].Operand2.Definitions[0].Instruction != IRInstruction.MulSigned64)
				return false;

			if (!AreSame(context.Operand2.Definitions[0].Operand1.Definitions[0].Operand1, context.Operand2.Definitions[0].Operand1.Definitions[0].Operand2))
				return false;

			if (!AreSame(context.Operand2.Definitions[0].Operand1.Definitions[0].Operand1, context.Operand2.Definitions[0].Operand2.Definitions[0].Operand2))
				return false;

			if (!IsResolvedConstant(context.Operand1))
				return false;

			if (!IsResolvedConstant(context.Operand2.Definitions[0].Operand2.Definitions[0].Operand1))
				return false;

			if (!IsEvenInteger(context.Operand2.Definitions[0].Operand2.Definitions[0].Operand1))
				return false;

			if (!IsEqual(To64(context.Operand1), Square64(DivUnsigned64(To64(context.Operand2.Definitions[0].Operand2.Definitions[0].Operand1), 2))))
				return false;

			return true;
		}

		public override void Transform(Context context, TransformContext transformContext)
		{
			var result = context.Result;

			var t1 = context.Operand2.Definitions[0].Operand1.Definitions[0].Operand1;
			var t2 = context.Operand2.Definitions[0].Operand2.Definitions[0].Operand1;

			var v1 = transformContext.AllocateVirtualRegister(transformContext.I8);
			var v2 = transformContext.AllocateVirtualRegister(transformContext.I8);

			var e1 = transformContext.CreateConstant(DivSigned64(ToSigned64(t2), 2));

			context.SetInstruction(IRInstruction.Add64, v1, t1, e1);
			context.AppendInstruction(IRInstruction.Add64, v2, t1, e1);
			context.AppendInstruction(IRInstruction.MulSigned64, result, v2, v1);
		}
	}

	/// <summary>
	/// Signed64PerfectSquareFormula_v2
	/// </summary>
	public sealed class Signed64PerfectSquareFormula_v2 : BaseTransformation
	{
		public Signed64PerfectSquareFormula_v2() : base(IRInstruction.Add64)
		{
		}

		public override bool Match(Context context, TransformContext transformContext)
		{
			if (!context.Operand1.IsVirtualRegister)
				return false;

			if (context.Operand1.Definitions.Count != 1)
				return false;

			if (context.Operand1.Definitions[0].Instruction != IRInstruction.Add64)
				return false;

			if (!context.Operand1.Definitions[0].Operand1.IsVirtualRegister)
				return false;

			if (!context.Operand1.Definitions[0].Operand2.IsVirtualRegister)
				return false;

			if (context.Operand1.Definitions[0].Operand1.Definitions.Count != 1)
				return false;

			if (context.Operand1.Definitions[0].Operand1.Definitions[0].Instruction != IRInstruction.MulSigned64)
				return false;

			if (context.Operand1.Definitions[0].Operand2.Definitions.Count != 1)
				return false;

			if (context.Operand1.Definitions[0].Operand2.Definitions[0].Instruction != IRInstruction.MulSigned64)
				return false;

			if (!AreSame(context.Operand1.Definitions[0].Operand1.Definitions[0].Operand2, context.Operand1.Definitions[0].Operand2.Definitions[0].Operand1))
				return false;

			if (!AreSame(context.Operand1.Definitions[0].Operand1.Definitions[0].Operand2, context.Operand1.Definitions[0].Operand2.Definitions[0].Operand2))
				return false;

			if (!IsResolvedConstant(context.Operand2))
				return false;

			if (!IsResolvedConstant(context.Operand1.Definitions[0].Operand1.Definitions[0].Operand1))
				return false;

			if (!IsEvenInteger(context.Operand1.Definitions[0].Operand1.Definitions[0].Operand1))
				return false;

			if (!IsEqual(To64(context.Operand2), Square64(DivUnsigned64(To64(context.Operand1.Definitions[0].Operand1.Definitions[0].Operand1), 2))))
				return false;

			return true;
		}

		public override void Transform(Context context, TransformContext transformContext)
		{
			var result = context.Result;

			var t1 = context.Operand1.Definitions[0].Operand1.Definitions[0].Operand1;
			var t2 = context.Operand1.Definitions[0].Operand1.Definitions[0].Operand2;

			var v1 = transformContext.AllocateVirtualRegister(transformContext.I8);
			var v2 = transformContext.AllocateVirtualRegister(transformContext.I8);

			var e1 = transformContext.CreateConstant(DivSigned64(ToSigned64(t1), 2));

			context.SetInstruction(IRInstruction.Add64, v1, t2, e1);
			context.AppendInstruction(IRInstruction.Add64, v2, t2, e1);
			context.AppendInstruction(IRInstruction.MulSigned64, result, v2, v1);
		}
	}

	/// <summary>
	/// Signed64PerfectSquareFormula_v3
	/// </summary>
	public sealed class Signed64PerfectSquareFormula_v3 : BaseTransformation
	{
		public Signed64PerfectSquareFormula_v3() : base(IRInstruction.Add64)
		{
		}

		public override bool Match(Context context, TransformContext transformContext)
		{
			if (!context.Operand2.IsVirtualRegister)
				return false;

			if (context.Operand2.Definitions.Count != 1)
				return false;

			if (context.Operand2.Definitions[0].Instruction != IRInstruction.Add64)
				return false;

			if (!context.Operand2.Definitions[0].Operand1.IsVirtualRegister)
				return false;

			if (!context.Operand2.Definitions[0].Operand2.IsVirtualRegister)
				return false;

			if (context.Operand2.Definitions[0].Operand1.Definitions.Count != 1)
				return false;

			if (context.Operand2.Definitions[0].Operand1.Definitions[0].Instruction != IRInstruction.MulSigned64)
				return false;

			if (context.Operand2.Definitions[0].Operand2.Definitions.Count != 1)
				return false;

			if (context.Operand2.Definitions[0].Operand2.Definitions[0].Instruction != IRInstruction.MulSigned64)
				return false;

			if (!AreSame(context.Operand2.Definitions[0].Operand1.Definitions[0].Operand2, context.Operand2.Definitions[0].Operand2.Definitions[0].Operand1))
				return false;

			if (!AreSame(context.Operand2.Definitions[0].Operand1.Definitions[0].Operand2, context.Operand2.Definitions[0].Operand2.Definitions[0].Operand2))
				return false;

			if (!IsResolvedConstant(context.Operand1))
				return false;

			if (!IsResolvedConstant(context.Operand2.Definitions[0].Operand1.Definitions[0].Operand1))
				return false;

			if (!IsEvenInteger(context.Operand2.Definitions[0].Operand1.Definitions[0].Operand1))
				return false;

			if (!IsEqual(To64(context.Operand1), Square64(DivUnsigned64(To64(context.Operand2.Definitions[0].Operand1.Definitions[0].Operand1), 2))))
				return false;

			return true;
		}

		public override void Transform(Context context, TransformContext transformContext)
		{
			var result = context.Result;

			var t1 = context.Operand2.Definitions[0].Operand1.Definitions[0].Operand1;
			var t2 = context.Operand2.Definitions[0].Operand1.Definitions[0].Operand2;

			var v1 = transformContext.AllocateVirtualRegister(transformContext.I8);
			var v2 = transformContext.AllocateVirtualRegister(transformContext.I8);

			var e1 = transformContext.CreateConstant(DivSigned64(ToSigned64(t1), 2));

			context.SetInstruction(IRInstruction.Add64, v1, t2, e1);
			context.AppendInstruction(IRInstruction.Add64, v2, t2, e1);
			context.AppendInstruction(IRInstruction.MulSigned64, result, v2, v1);
		}
	}

	/// <summary>
	/// Signed64PerfectSquareFormula_v4
	/// </summary>
	public sealed class Signed64PerfectSquareFormula_v4 : BaseTransformation
	{
		public Signed64PerfectSquareFormula_v4() : base(IRInstruction.Add64)
		{
		}

		public override bool Match(Context context, TransformContext transformContext)
		{
			if (!context.Operand1.IsVirtualRegister)
				return false;

			if (context.Operand1.Definitions.Count != 1)
				return false;

			if (context.Operand1.Definitions[0].Instruction != IRInstruction.Add64)
				return false;

			if (!context.Operand1.Definitions[0].Operand1.IsVirtualRegister)
				return false;

			if (!context.Operand1.Definitions[0].Operand2.IsVirtualRegister)
				return false;

			if (context.Operand1.Definitions[0].Operand1.Definitions.Count != 1)
				return false;

			if (context.Operand1.Definitions[0].Operand1.Definitions[0].Instruction != IRInstruction.MulSigned64)
				return false;

			if (context.Operand1.Definitions[0].Operand2.Definitions.Count != 1)
				return false;

			if (context.Operand1.Definitions[0].Operand2.Definitions[0].Instruction != IRInstruction.MulSigned64)
				return false;

			if (!AreSame(context.Operand1.Definitions[0].Operand1.Definitions[0].Operand1, context.Operand1.Definitions[0].Operand1.Definitions[0].Operand2))
				return false;

			if (!AreSame(context.Operand1.Definitions[0].Operand1.Definitions[0].Operand1, context.Operand1.Definitions[0].Operand2.Definitions[0].Operand1))
				return false;

			if (!IsResolvedConstant(context.Operand2))
				return false;

			if (!IsResolvedConstant(context.Operand1.Definitions[0].Operand2.Definitions[0].Operand2))
				return false;

			if (!IsEvenInteger(context.Operand1.Definitions[0].Operand2.Definitions[0].Operand2))
				return false;

			if (!IsEqual(To64(context.Operand2), Square64(DivUnsigned64(To64(context.Operand1.Definitions[0].Operand2.Definitions[0].Operand2), 2))))
				return false;

			return true;
		}

		public override void Transform(Context context, TransformContext transformContext)
		{
			var result = context.Result;

			var t1 = context.Operand1.Definitions[0].Operand1.Definitions[0].Operand1;
			var t2 = context.Operand1.Definitions[0].Operand2.Definitions[0].Operand2;

			var v1 = transformContext.AllocateVirtualRegister(transformContext.I8);
			var v2 = transformContext.AllocateVirtualRegister(transformContext.I8);

			var e1 = transformContext.CreateConstant(DivSigned64(ToSigned64(t2), 2));

			context.SetInstruction(IRInstruction.Add64, v1, t1, e1);
			context.AppendInstruction(IRInstruction.Add64, v2, t1, e1);
			context.AppendInstruction(IRInstruction.MulSigned64, result, v2, v1);
		}
	}

	/// <summary>
	/// Signed64PerfectSquareFormula_v5
	/// </summary>
	public sealed class Signed64PerfectSquareFormula_v5 : BaseTransformation
	{
		public Signed64PerfectSquareFormula_v5() : base(IRInstruction.Add64)
		{
		}

		public override bool Match(Context context, TransformContext transformContext)
		{
			if (!context.Operand2.IsVirtualRegister)
				return false;

			if (context.Operand2.Definitions.Count != 1)
				return false;

			if (context.Operand2.Definitions[0].Instruction != IRInstruction.Add64)
				return false;

			if (!context.Operand2.Definitions[0].Operand1.IsVirtualRegister)
				return false;

			if (!context.Operand2.Definitions[0].Operand2.IsVirtualRegister)
				return false;

			if (context.Operand2.Definitions[0].Operand1.Definitions.Count != 1)
				return false;

			if (context.Operand2.Definitions[0].Operand1.Definitions[0].Instruction != IRInstruction.MulSigned64)
				return false;

			if (context.Operand2.Definitions[0].Operand2.Definitions.Count != 1)
				return false;

			if (context.Operand2.Definitions[0].Operand2.Definitions[0].Instruction != IRInstruction.MulSigned64)
				return false;

			if (!AreSame(context.Operand2.Definitions[0].Operand1.Definitions[0].Operand1, context.Operand2.Definitions[0].Operand1.Definitions[0].Operand2))
				return false;

			if (!AreSame(context.Operand2.Definitions[0].Operand1.Definitions[0].Operand1, context.Operand2.Definitions[0].Operand2.Definitions[0].Operand1))
				return false;

			if (!IsResolvedConstant(context.Operand1))
				return false;

			if (!IsResolvedConstant(context.Operand2.Definitions[0].Operand2.Definitions[0].Operand2))
				return false;

			if (!IsEvenInteger(context.Operand2.Definitions[0].Operand2.Definitions[0].Operand2))
				return false;

			if (!IsEqual(To64(context.Operand1), Square64(DivUnsigned64(To64(context.Operand2.Definitions[0].Operand2.Definitions[0].Operand2), 2))))
				return false;

			return true;
		}

		public override void Transform(Context context, TransformContext transformContext)
		{
			var result = context.Result;

			var t1 = context.Operand2.Definitions[0].Operand1.Definitions[0].Operand1;
			var t2 = context.Operand2.Definitions[0].Operand2.Definitions[0].Operand2;

			var v1 = transformContext.AllocateVirtualRegister(transformContext.I8);
			var v2 = transformContext.AllocateVirtualRegister(transformContext.I8);

			var e1 = transformContext.CreateConstant(DivSigned64(ToSigned64(t2), 2));

			context.SetInstruction(IRInstruction.Add64, v1, t1, e1);
			context.AppendInstruction(IRInstruction.Add64, v2, t1, e1);
			context.AppendInstruction(IRInstruction.MulSigned64, result, v2, v1);
		}
	}

	/// <summary>
	/// Signed64PerfectSquareFormula_v6
	/// </summary>
	public sealed class Signed64PerfectSquareFormula_v6 : BaseTransformation
	{
		public Signed64PerfectSquareFormula_v6() : base(IRInstruction.Add64)
		{
		}

		public override bool Match(Context context, TransformContext transformContext)
		{
			if (!context.Operand1.IsVirtualRegister)
				return false;

			if (context.Operand1.Definitions.Count != 1)
				return false;

			if (context.Operand1.Definitions[0].Instruction != IRInstruction.Add64)
				return false;

			if (!context.Operand1.Definitions[0].Operand1.IsVirtualRegister)
				return false;

			if (!context.Operand1.Definitions[0].Operand2.IsVirtualRegister)
				return false;

			if (context.Operand1.Definitions[0].Operand1.Definitions.Count != 1)
				return false;

			if (context.Operand1.Definitions[0].Operand1.Definitions[0].Instruction != IRInstruction.MulSigned64)
				return false;

			if (context.Operand1.Definitions[0].Operand2.Definitions.Count != 1)
				return false;

			if (context.Operand1.Definitions[0].Operand2.Definitions[0].Instruction != IRInstruction.MulSigned64)
				return false;

			if (!AreSame(context.Operand1.Definitions[0].Operand1.Definitions[0].Operand1, context.Operand1.Definitions[0].Operand2.Definitions[0].Operand1))
				return false;

			if (!AreSame(context.Operand1.Definitions[0].Operand1.Definitions[0].Operand1, context.Operand1.Definitions[0].Operand2.Definitions[0].Operand2))
				return false;

			if (!IsResolvedConstant(context.Operand2))
				return false;

			if (!IsResolvedConstant(context.Operand1.Definitions[0].Operand1.Definitions[0].Operand2))
				return false;

			if (!IsEvenInteger(context.Operand1.Definitions[0].Operand1.Definitions[0].Operand2))
				return false;

			if (!IsEqual(To64(context.Operand2), Square64(DivUnsigned64(To64(context.Operand1.Definitions[0].Operand1.Definitions[0].Operand2), 2))))
				return false;

			return true;
		}

		public override void Transform(Context context, TransformContext transformContext)
		{
			var result = context.Result;

			var t1 = context.Operand1.Definitions[0].Operand1.Definitions[0].Operand1;
			var t2 = context.Operand1.Definitions[0].Operand1.Definitions[0].Operand2;

			var v1 = transformContext.AllocateVirtualRegister(transformContext.I8);
			var v2 = transformContext.AllocateVirtualRegister(transformContext.I8);

			var e1 = transformContext.CreateConstant(DivSigned64(ToSigned64(t2), 2));

			context.SetInstruction(IRInstruction.Add64, v1, t1, e1);
			context.AppendInstruction(IRInstruction.Add64, v2, t1, e1);
			context.AppendInstruction(IRInstruction.MulSigned64, result, v2, v1);
		}
	}

	/// <summary>
	/// Signed64PerfectSquareFormula_v7
	/// </summary>
	public sealed class Signed64PerfectSquareFormula_v7 : BaseTransformation
	{
		public Signed64PerfectSquareFormula_v7() : base(IRInstruction.Add64)
		{
		}

		public override bool Match(Context context, TransformContext transformContext)
		{
			if (!context.Operand2.IsVirtualRegister)
				return false;

			if (context.Operand2.Definitions.Count != 1)
				return false;

			if (context.Operand2.Definitions[0].Instruction != IRInstruction.Add64)
				return false;

			if (!context.Operand2.Definitions[0].Operand1.IsVirtualRegister)
				return false;

			if (!context.Operand2.Definitions[0].Operand2.IsVirtualRegister)
				return false;

			if (context.Operand2.Definitions[0].Operand1.Definitions.Count != 1)
				return false;

			if (context.Operand2.Definitions[0].Operand1.Definitions[0].Instruction != IRInstruction.MulSigned64)
				return false;

			if (context.Operand2.Definitions[0].Operand2.Definitions.Count != 1)
				return false;

			if (context.Operand2.Definitions[0].Operand2.Definitions[0].Instruction != IRInstruction.MulSigned64)
				return false;

			if (!AreSame(context.Operand2.Definitions[0].Operand1.Definitions[0].Operand1, context.Operand2.Definitions[0].Operand2.Definitions[0].Operand1))
				return false;

			if (!AreSame(context.Operand2.Definitions[0].Operand1.Definitions[0].Operand1, context.Operand2.Definitions[0].Operand2.Definitions[0].Operand2))
				return false;

			if (!IsResolvedConstant(context.Operand1))
				return false;

			if (!IsResolvedConstant(context.Operand2.Definitions[0].Operand1.Definitions[0].Operand2))
				return false;

			if (!IsEvenInteger(context.Operand2.Definitions[0].Operand1.Definitions[0].Operand2))
				return false;

			if (!IsEqual(To64(context.Operand1), Square64(DivUnsigned64(To64(context.Operand2.Definitions[0].Operand1.Definitions[0].Operand2), 2))))
				return false;

			return true;
		}

		public override void Transform(Context context, TransformContext transformContext)
		{
			var result = context.Result;

			var t1 = context.Operand2.Definitions[0].Operand1.Definitions[0].Operand1;
			var t2 = context.Operand2.Definitions[0].Operand1.Definitions[0].Operand2;

			var v1 = transformContext.AllocateVirtualRegister(transformContext.I8);
			var v2 = transformContext.AllocateVirtualRegister(transformContext.I8);

			var e1 = transformContext.CreateConstant(DivSigned64(ToSigned64(t2), 2));

			context.SetInstruction(IRInstruction.Add64, v1, t1, e1);
			context.AppendInstruction(IRInstruction.Add64, v2, t1, e1);
			context.AppendInstruction(IRInstruction.MulSigned64, result, v2, v1);
		}
	}
}
