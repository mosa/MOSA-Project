// Copyright (c) MOSA Project. Licensed under the New BSD License.

// This code was generated by an automated template.


namespace Mosa.Compiler.Framework.Transform.Auto
{
	/// <summary>
	/// Transformation
	/// </summary>
	public static class AutoInstance
	{
		public static readonly BaseTransformation IR_ConstantFolding_Add32 = new IR.ConstantFolding.Add32();
		public static readonly BaseTransformation IR_ConstantFolding_Add64 = new IR.ConstantFolding.Add64();
		public static readonly BaseTransformation IR_ConstantFolding_AddR4 = new IR.ConstantFolding.AddR4();
		public static readonly BaseTransformation IR_ConstantFolding_AddR8 = new IR.ConstantFolding.AddR8();
		public static readonly BaseTransformation IR_ConstantFolding_AddCarryIn32 = new IR.ConstantFolding.AddCarryIn32();
		public static readonly BaseTransformation IR_ConstantFolding_AddCarryIn64 = new IR.ConstantFolding.AddCarryIn64();
		public static readonly BaseTransformation IR_ConstantFolding_ShiftRight32 = new IR.ConstantFolding.ShiftRight32();
		public static readonly BaseTransformation IR_ConstantFolding_ShiftRight64 = new IR.ConstantFolding.ShiftRight64();
		public static readonly BaseTransformation IR_ConstantFolding_ShiftLeft32 = new IR.ConstantFolding.ShiftLeft32();
		public static readonly BaseTransformation IR_ConstantFolding_ShiftLeft64 = new IR.ConstantFolding.ShiftLeft64();
		public static readonly BaseTransformation IR_ConstantFolding_DivUnsigned32 = new IR.ConstantFolding.DivUnsigned32();
		public static readonly BaseTransformation IR_ConstantFolding_DivUnsigned64 = new IR.ConstantFolding.DivUnsigned64();
		public static readonly BaseTransformation IR_ConstantFolding_DivSigned32 = new IR.ConstantFolding.DivSigned32();
		public static readonly BaseTransformation IR_ConstantFolding_DivSigned64 = new IR.ConstantFolding.DivSigned64();
		public static readonly BaseTransformation IR_ConstantFolding_DivR4 = new IR.ConstantFolding.DivR4();
		public static readonly BaseTransformation IR_ConstantFolding_DivR8 = new IR.ConstantFolding.DivR8();
		public static readonly BaseTransformation IR_ConstantFolding_And32 = new IR.ConstantFolding.And32();
		public static readonly BaseTransformation IR_ConstantFolding_And64 = new IR.ConstantFolding.And64();
		public static readonly BaseTransformation IR_ConstantFolding_Or32 = new IR.ConstantFolding.Or32();
		public static readonly BaseTransformation IR_ConstantFolding_Or64 = new IR.ConstantFolding.Or64();
		public static readonly BaseTransformation IR_ConstantFolding_Xor32 = new IR.ConstantFolding.Xor32();
		public static readonly BaseTransformation IR_ConstantFolding_Xor64 = new IR.ConstantFolding.Xor64();
		public static readonly BaseTransformation IR_ConstantFolding_Not32 = new IR.ConstantFolding.Not32();
		public static readonly BaseTransformation IR_ConstantFolding_Not64 = new IR.ConstantFolding.Not64();
		public static readonly BaseTransformation IR_ConstantFolding_MulUnsigned32 = new IR.ConstantFolding.MulUnsigned32();
		public static readonly BaseTransformation IR_ConstantFolding_MulUnsigned64 = new IR.ConstantFolding.MulUnsigned64();
		public static readonly BaseTransformation IR_ConstantFolding_MulSigned32 = new IR.ConstantFolding.MulSigned32();
		public static readonly BaseTransformation IR_ConstantFolding_MulSigned64 = new IR.ConstantFolding.MulSigned64();
		public static readonly BaseTransformation IR_ConstantFolding_MulR4 = new IR.ConstantFolding.MulR4();
		public static readonly BaseTransformation IR_ConstantFolding_MulR8 = new IR.ConstantFolding.MulR8();
		public static readonly BaseTransformation IR_ConstantFolding_RemUnsigned32 = new IR.ConstantFolding.RemUnsigned32();
		public static readonly BaseTransformation IR_ConstantFolding_RemUnsigned64 = new IR.ConstantFolding.RemUnsigned64();
		public static readonly BaseTransformation IR_ConstantFolding_RemSigned32 = new IR.ConstantFolding.RemSigned32();
		public static readonly BaseTransformation IR_ConstantFolding_RemSigned64 = new IR.ConstantFolding.RemSigned64();
		public static readonly BaseTransformation IR_ConstantFolding_RemR4 = new IR.ConstantFolding.RemR4();
		public static readonly BaseTransformation IR_ConstantFolding_RemR8 = new IR.ConstantFolding.RemR8();
		public static readonly BaseTransformation IR_ConstantFolding_Sub32 = new IR.ConstantFolding.Sub32();
		public static readonly BaseTransformation IR_ConstantFolding_Sub64 = new IR.ConstantFolding.Sub64();
		public static readonly BaseTransformation IR_ConstantFolding_SubR4 = new IR.ConstantFolding.SubR4();
		public static readonly BaseTransformation IR_ConstantFolding_SubR8 = new IR.ConstantFolding.SubR8();
		public static readonly BaseTransformation IR_ConstantFolding_SubCarryIn32 = new IR.ConstantFolding.SubCarryIn32();
		public static readonly BaseTransformation IR_ConstantFolding_SubCarryIn64 = new IR.ConstantFolding.SubCarryIn64();
		public static readonly BaseTransformation IR_ConstantFolding_IfThenElse32AlwaysTrue = new IR.ConstantFolding.IfThenElse32AlwaysTrue();
		public static readonly BaseTransformation IR_ConstantFolding_IfThenElse64AlwaysTrue = new IR.ConstantFolding.IfThenElse64AlwaysTrue();
		public static readonly BaseTransformation IR_ConstantFolding_IfThenElse32AlwaysFalse = new IR.ConstantFolding.IfThenElse32AlwaysFalse();
		public static readonly BaseTransformation IR_ConstantFolding_IfThenElse64AlwaysFalse = new IR.ConstantFolding.IfThenElse64AlwaysFalse();
		public static readonly BaseTransformation IR_ConstantFolding_SignExtend16x32 = new IR.ConstantFolding.SignExtend16x32();
		public static readonly BaseTransformation IR_ConstantFolding_SignExtend16x64 = new IR.ConstantFolding.SignExtend16x64();
		public static readonly BaseTransformation IR_ConstantFolding_SignExtend32x64 = new IR.ConstantFolding.SignExtend32x64();
		public static readonly BaseTransformation IR_ConstantFolding_SignExtend8x32 = new IR.ConstantFolding.SignExtend8x32();
		public static readonly BaseTransformation IR_ConstantFolding_SignExtend8x64 = new IR.ConstantFolding.SignExtend8x64();
		public static readonly BaseTransformation IR_ConstantFolding_ZeroExtend16x32 = new IR.ConstantFolding.ZeroExtend16x32();
		public static readonly BaseTransformation IR_ConstantFolding_ZeroExtend16x64 = new IR.ConstantFolding.ZeroExtend16x64();
		public static readonly BaseTransformation IR_ConstantFolding_ZeroExtend32x64 = new IR.ConstantFolding.ZeroExtend32x64();
		public static readonly BaseTransformation IR_ConstantFolding_ZeroExtend8x32 = new IR.ConstantFolding.ZeroExtend8x32();
		public static readonly BaseTransformation IR_ConstantFolding_ZeroExtend8x64 = new IR.ConstantFolding.ZeroExtend8x64();
		public static readonly BaseTransformation IR_ConstantFolding_Convert32ToR4 = new IR.ConstantFolding.Convert32ToR4();
		public static readonly BaseTransformation IR_ConstantFolding_Convert32ToR8 = new IR.ConstantFolding.Convert32ToR8();
		public static readonly BaseTransformation IR_ConstantFolding_Convert64ToR4 = new IR.ConstantFolding.Convert64ToR4();
		public static readonly BaseTransformation IR_ConstantFolding_Convert64ToR8 = new IR.ConstantFolding.Convert64ToR8();
		public static readonly BaseTransformation IR_ConstantFolding_GetHigh64 = new IR.ConstantFolding.GetHigh64();
		public static readonly BaseTransformation IR_ConstantFolding_GetLow64 = new IR.ConstantFolding.GetLow64();
		public static readonly BaseTransformation IR_ConstantFolding_To64 = new IR.ConstantFolding.To64();
		public static readonly BaseTransformation IR_ConstantMove_Add32 = new IR.ConstantMove.Add32();
		public static readonly BaseTransformation IR_ConstantMove_Add64 = new IR.ConstantMove.Add64();
		public static readonly BaseTransformation IR_ConstantMove_AddR4 = new IR.ConstantMove.AddR4();
		public static readonly BaseTransformation IR_ConstantMove_AddR8 = new IR.ConstantMove.AddR8();
		public static readonly BaseTransformation IR_ConstantMove_MulSigned32 = new IR.ConstantMove.MulSigned32();
		public static readonly BaseTransformation IR_ConstantMove_MulSigned64 = new IR.ConstantMove.MulSigned64();
		public static readonly BaseTransformation IR_ConstantMove_MulUnsigned32 = new IR.ConstantMove.MulUnsigned32();
		public static readonly BaseTransformation IR_ConstantMove_MulUnsigned64 = new IR.ConstantMove.MulUnsigned64();
		public static readonly BaseTransformation IR_ConstantMove_MulR4 = new IR.ConstantMove.MulR4();
		public static readonly BaseTransformation IR_ConstantMove_MulR8 = new IR.ConstantMove.MulR8();
		public static readonly BaseTransformation IR_ConstantMove_And32 = new IR.ConstantMove.And32();
		public static readonly BaseTransformation IR_ConstantMove_And64 = new IR.ConstantMove.And64();
		public static readonly BaseTransformation IR_ConstantMove_Or32 = new IR.ConstantMove.Or32();
		public static readonly BaseTransformation IR_ConstantMove_Or64 = new IR.ConstantMove.Or64();
		public static readonly BaseTransformation IR_ConstantMove_Xor32 = new IR.ConstantMove.Xor32();
		public static readonly BaseTransformation IR_ConstantMove_Xor64 = new IR.ConstantMove.Xor64();
		public static readonly BaseTransformation IR_Simplification_Move32Propagation = new IR.Simplification.Move32Propagation();
		public static readonly BaseTransformation IR_Simplification_Move64Propagation = new IR.Simplification.Move64Propagation();
		public static readonly BaseTransformation IR_Simplification_Not32Twice = new IR.Simplification.Not32Twice();
		public static readonly BaseTransformation IR_Simplification_Not64Twice = new IR.Simplification.Not64Twice();
		public static readonly BaseTransformation IR_Simplification_GetLow64FromTo64 = new IR.Simplification.GetLow64FromTo64();
		public static readonly BaseTransformation IR_Simplification_GetHigh64FromTo64 = new IR.Simplification.GetHigh64FromTo64();
		public static readonly BaseTransformation IR_Simplification_GetHigh64To64 = new IR.Simplification.GetHigh64To64();
		public static readonly BaseTransformation IR_Simplification_GetLow64To64 = new IR.Simplification.GetLow64To64();
		public static readonly BaseTransformation IR_Simplification_To64FromLowHigh = new IR.Simplification.To64FromLowHigh();
		public static readonly BaseTransformation IR_Simplification_GetLow64FromShiftedRight32 = new IR.Simplification.GetLow64FromShiftedRight32();
		public static readonly BaseTransformation IR_Simplification_GetLow64FromRightShiftAndTo64 = new IR.Simplification.GetLow64FromRightShiftAndTo64();
		public static readonly BaseTransformation IR_Simplification_GetHigh64FromRightLeftAndTo64 = new IR.Simplification.GetHigh64FromRightLeftAndTo64();
		public static readonly BaseTransformation IR_Simplification_GetHigh64FromShiftedMore32 = new IR.Simplification.GetHigh64FromShiftedMore32();
		public static readonly BaseTransformation IR_Simplification_GetLow64FromShiftedMore32 = new IR.Simplification.GetLow64FromShiftedMore32();
		public static readonly BaseTransformation IR_Simplification_Truncate64x32Add64FromZeroExtended32x64 = new IR.Simplification.Truncate64x32Add64FromZeroExtended32x64();
		public static readonly BaseTransformation IR_Simplification_Truncate64x32Sub64FromZeroExtended32x64 = new IR.Simplification.Truncate64x32Sub64FromZeroExtended32x64();
		public static readonly BaseTransformation IR_Simplification_Truncate64x32MulUnsigned64FromZeroExtended32x64 = new IR.Simplification.Truncate64x32MulUnsigned64FromZeroExtended32x64();
		public static readonly BaseTransformation IR_Simplification_Truncate64x32And64FromZeroExtended32x64 = new IR.Simplification.Truncate64x32And64FromZeroExtended32x64();
		public static readonly BaseTransformation IR_Simplification_Truncate64x32Or64FromZeroExtended32x64 = new IR.Simplification.Truncate64x32Or64FromZeroExtended32x64();
		public static readonly BaseTransformation IR_Simplification_Truncate64x32Xor64FromZeroExtended32x64 = new IR.Simplification.Truncate64x32Xor64FromZeroExtended32x64();
		public static readonly BaseTransformation IR_Simplification_Add32MultipleWithCommon = new IR.Simplification.Add32MultipleWithCommon();
		public static readonly BaseTransformation IR_Simplification_Add64MultipleWithCommon = new IR.Simplification.Add64MultipleWithCommon();
		public static readonly BaseTransformation IR_Simplification_Sub32MultipleWithCommon = new IR.Simplification.Sub32MultipleWithCommon();
		public static readonly BaseTransformation IR_Simplification_Sub64MultipleWithCommon = new IR.Simplification.Sub64MultipleWithCommon();
		public static readonly BaseTransformation IR_Simplification_And32Not32Not32 = new IR.Simplification.And32Not32Not32();
		public static readonly BaseTransformation IR_Simplification_And64Not64Not64 = new IR.Simplification.And64Not64Not64();
		public static readonly BaseTransformation IR_Simplification_Or32Not32Not32 = new IR.Simplification.Or32Not32Not32();
		public static readonly BaseTransformation IR_Simplification_Or64Not64Not64 = new IR.Simplification.Or64Not64Not64();
		public static readonly BaseTransformation IR_ConstantFolding_AddCarryIn32Inside = new IR.ConstantFolding.AddCarryIn32Inside();
		public static readonly BaseTransformation IR_ConstantFolding_AddCarryIn64Inside = new IR.ConstantFolding.AddCarryIn64Inside();
		public static readonly BaseTransformation IR_ConstantFolding_AddCarryIn32Outside1 = new IR.ConstantFolding.AddCarryIn32Outside1();
		public static readonly BaseTransformation IR_ConstantFolding_AddCarryIn64Outside1 = new IR.ConstantFolding.AddCarryIn64Outside1();
		public static readonly BaseTransformation IR_ConstantFolding_AddCarryIn32Outside2 = new IR.ConstantFolding.AddCarryIn32Outside2();
		public static readonly BaseTransformation IR_ConstantFolding_AddCarryIn64Outside2 = new IR.ConstantFolding.AddCarryIn64Outside2();
		public static readonly BaseTransformation IR_ConstantFolding_AddCarryIn32NoCarry = new IR.ConstantFolding.AddCarryIn32NoCarry();
		public static readonly BaseTransformation IR_ConstantFolding_AddCarryIn64NoCarry = new IR.ConstantFolding.AddCarryIn64NoCarry();
		public static readonly BaseTransformation IR_ConstantFolding_SubCarryIn32Inside = new IR.ConstantFolding.SubCarryIn32Inside();
		public static readonly BaseTransformation IR_ConstantFolding_SubCarryIn64Inside = new IR.ConstantFolding.SubCarryIn64Inside();
		public static readonly BaseTransformation IR_ConstantFolding_SubCarryIn32Outside1 = new IR.ConstantFolding.SubCarryIn32Outside1();
		public static readonly BaseTransformation IR_ConstantFolding_SubCarryIn64Outside1 = new IR.ConstantFolding.SubCarryIn64Outside1();
		public static readonly BaseTransformation IR_ConstantFolding_SubCarryIn32Outside2 = new IR.ConstantFolding.SubCarryIn32Outside2();
		public static readonly BaseTransformation IR_ConstantFolding_SubCarryIn64Outside2 = new IR.ConstantFolding.SubCarryIn64Outside2();
		public static readonly BaseTransformation IR_ConstantFolding_SubCarryIn32NoCarry = new IR.ConstantFolding.SubCarryIn32NoCarry();
		public static readonly BaseTransformation IR_ConstantFolding_SubCarryIn64NoCarry = new IR.ConstantFolding.SubCarryIn64NoCarry();
		public static readonly BaseTransformation IR_StrengthReduction_Add32Zero = new IR.StrengthReduction.Add32Zero();
		public static readonly BaseTransformation IR_StrengthReduction_Add32Zero_v1 = new IR.StrengthReduction.Add32Zero_v1();
		public static readonly BaseTransformation IR_StrengthReduction_Add64Zero = new IR.StrengthReduction.Add64Zero();
		public static readonly BaseTransformation IR_StrengthReduction_Add64Zero_v1 = new IR.StrengthReduction.Add64Zero_v1();
		public static readonly BaseTransformation IR_StrengthReduction_And32Zero = new IR.StrengthReduction.And32Zero();
		public static readonly BaseTransformation IR_StrengthReduction_And32Zero_v1 = new IR.StrengthReduction.And32Zero_v1();
		public static readonly BaseTransformation IR_StrengthReduction_And64Zero = new IR.StrengthReduction.And64Zero();
		public static readonly BaseTransformation IR_StrengthReduction_And64Zero_v1 = new IR.StrengthReduction.And64Zero_v1();
		public static readonly BaseTransformation IR_StrengthReduction_And32Max = new IR.StrengthReduction.And32Max();
		public static readonly BaseTransformation IR_StrengthReduction_And32Max_v1 = new IR.StrengthReduction.And32Max_v1();
		public static readonly BaseTransformation IR_StrengthReduction_And64Max = new IR.StrengthReduction.And64Max();
		public static readonly BaseTransformation IR_StrengthReduction_And64Max_v1 = new IR.StrengthReduction.And64Max_v1();
		public static readonly BaseTransformation IR_StrengthReduction_Or32Max = new IR.StrengthReduction.Or32Max();
		public static readonly BaseTransformation IR_StrengthReduction_Or32Max_v1 = new IR.StrengthReduction.Or32Max_v1();
		public static readonly BaseTransformation IR_StrengthReduction_Or64Max = new IR.StrengthReduction.Or64Max();
		public static readonly BaseTransformation IR_StrengthReduction_Or64Max_v1 = new IR.StrengthReduction.Or64Max_v1();
		public static readonly BaseTransformation IR_StrengthReduction_Or32Zero = new IR.StrengthReduction.Or32Zero();
		public static readonly BaseTransformation IR_StrengthReduction_Or32Zero_v1 = new IR.StrengthReduction.Or32Zero_v1();
		public static readonly BaseTransformation IR_StrengthReduction_Or64Zero = new IR.StrengthReduction.Or64Zero();
		public static readonly BaseTransformation IR_StrengthReduction_Or64Zero_v1 = new IR.StrengthReduction.Or64Zero_v1();
		public static readonly BaseTransformation IR_StrengthReduction_Xor32Zero = new IR.StrengthReduction.Xor32Zero();
		public static readonly BaseTransformation IR_StrengthReduction_Xor32Zero_v1 = new IR.StrengthReduction.Xor32Zero_v1();
		public static readonly BaseTransformation IR_StrengthReduction_Xor64Zero = new IR.StrengthReduction.Xor64Zero();
		public static readonly BaseTransformation IR_StrengthReduction_Xor64Zero_v1 = new IR.StrengthReduction.Xor64Zero_v1();
		public static readonly BaseTransformation IR_StrengthReduction_Xor32Max = new IR.StrengthReduction.Xor32Max();
		public static readonly BaseTransformation IR_StrengthReduction_Xor32Max_v1 = new IR.StrengthReduction.Xor32Max_v1();
		public static readonly BaseTransformation IR_StrengthReduction_Xor64Max = new IR.StrengthReduction.Xor64Max();
		public static readonly BaseTransformation IR_StrengthReduction_Xor64Max_v1 = new IR.StrengthReduction.Xor64Max_v1();
		public static readonly BaseTransformation IR_StrengthReduction_ShiftRight32ZeroValue = new IR.StrengthReduction.ShiftRight32ZeroValue();
		public static readonly BaseTransformation IR_StrengthReduction_ShiftRight64ZeroValue = new IR.StrengthReduction.ShiftRight64ZeroValue();
		public static readonly BaseTransformation IR_StrengthReduction_ShiftRight32ByZero = new IR.StrengthReduction.ShiftRight32ByZero();
		public static readonly BaseTransformation IR_StrengthReduction_ShiftRight64ByZero = new IR.StrengthReduction.ShiftRight64ByZero();
		public static readonly BaseTransformation IR_StrengthReduction_ShiftLeft32ByZero = new IR.StrengthReduction.ShiftLeft32ByZero();
		public static readonly BaseTransformation IR_StrengthReduction_ShiftLeft64ByZero = new IR.StrengthReduction.ShiftLeft64ByZero();
		public static readonly BaseTransformation IR_StrengthReduction_Sub32ByZero = new IR.StrengthReduction.Sub32ByZero();
		public static readonly BaseTransformation IR_StrengthReduction_Sub64ByZero = new IR.StrengthReduction.Sub64ByZero();
		public static readonly BaseTransformation IR_StrengthReduction_Sub32Same = new IR.StrengthReduction.Sub32Same();
		public static readonly BaseTransformation IR_StrengthReduction_Sub64Same = new IR.StrengthReduction.Sub64Same();
		public static readonly BaseTransformation IR_StrengthReduction_Xor32Same = new IR.StrengthReduction.Xor32Same();
		public static readonly BaseTransformation IR_StrengthReduction_Xor64Same = new IR.StrengthReduction.Xor64Same();
		public static readonly BaseTransformation IR_StrengthReduction_MulSigned32ByZero = new IR.StrengthReduction.MulSigned32ByZero();
		public static readonly BaseTransformation IR_StrengthReduction_MulSigned32ByZero_v1 = new IR.StrengthReduction.MulSigned32ByZero_v1();
		public static readonly BaseTransformation IR_StrengthReduction_MulSigned64ByZero = new IR.StrengthReduction.MulSigned64ByZero();
		public static readonly BaseTransformation IR_StrengthReduction_MulSigned64ByZero_v1 = new IR.StrengthReduction.MulSigned64ByZero_v1();
		public static readonly BaseTransformation IR_StrengthReduction_MulUnsigned32ByZero = new IR.StrengthReduction.MulUnsigned32ByZero();
		public static readonly BaseTransformation IR_StrengthReduction_MulUnsigned32ByZero_v1 = new IR.StrengthReduction.MulUnsigned32ByZero_v1();
		public static readonly BaseTransformation IR_StrengthReduction_MulUnsigned64ByZero = new IR.StrengthReduction.MulUnsigned64ByZero();
		public static readonly BaseTransformation IR_StrengthReduction_MulUnsigned64ByZero_v1 = new IR.StrengthReduction.MulUnsigned64ByZero_v1();
		public static readonly BaseTransformation IR_StrengthReduction_MulSigned32ByOne = new IR.StrengthReduction.MulSigned32ByOne();
		public static readonly BaseTransformation IR_StrengthReduction_MulSigned32ByOne_v1 = new IR.StrengthReduction.MulSigned32ByOne_v1();
		public static readonly BaseTransformation IR_StrengthReduction_MulSigned64ByOne = new IR.StrengthReduction.MulSigned64ByOne();
		public static readonly BaseTransformation IR_StrengthReduction_MulSigned64ByOne_v1 = new IR.StrengthReduction.MulSigned64ByOne_v1();
		public static readonly BaseTransformation IR_StrengthReduction_MulUnsigned32ByOne = new IR.StrengthReduction.MulUnsigned32ByOne();
		public static readonly BaseTransformation IR_StrengthReduction_MulUnsigned32ByOne_v1 = new IR.StrengthReduction.MulUnsigned32ByOne_v1();
		public static readonly BaseTransformation IR_StrengthReduction_MulUnsigned64ByOne = new IR.StrengthReduction.MulUnsigned64ByOne();
		public static readonly BaseTransformation IR_StrengthReduction_MulUnsigned64ByOne_v1 = new IR.StrengthReduction.MulUnsigned64ByOne_v1();
		public static readonly BaseTransformation IR_StrengthReduction_MulUnsigned32ByPowerOfTwo = new IR.StrengthReduction.MulUnsigned32ByPowerOfTwo();
		public static readonly BaseTransformation IR_StrengthReduction_MulUnsigned32ByPowerOfTwo_v1 = new IR.StrengthReduction.MulUnsigned32ByPowerOfTwo_v1();
		public static readonly BaseTransformation IR_StrengthReduction_MulUnsigned64ByPowerOfTwo = new IR.StrengthReduction.MulUnsigned64ByPowerOfTwo();
		public static readonly BaseTransformation IR_StrengthReduction_MulUnsigned64ByPowerOfTwo_v1 = new IR.StrengthReduction.MulUnsigned64ByPowerOfTwo_v1();
		public static readonly BaseTransformation IR_StrengthReduction_MulSigned32ByPowerOfTwo = new IR.StrengthReduction.MulSigned32ByPowerOfTwo();
		public static readonly BaseTransformation IR_StrengthReduction_MulSigned32ByPowerOfTwo_v1 = new IR.StrengthReduction.MulSigned32ByPowerOfTwo_v1();
		public static readonly BaseTransformation IR_StrengthReduction_MulSigned64ByPowerOfTwo = new IR.StrengthReduction.MulSigned64ByPowerOfTwo();
		public static readonly BaseTransformation IR_StrengthReduction_MulSigned64ByPowerOfTwo_v1 = new IR.StrengthReduction.MulSigned64ByPowerOfTwo_v1();
		public static readonly BaseTransformation IR_StrengthReduction_DivSigned32ByZero = new IR.StrengthReduction.DivSigned32ByZero();
		public static readonly BaseTransformation IR_StrengthReduction_DivSigned64ByZero = new IR.StrengthReduction.DivSigned64ByZero();
		public static readonly BaseTransformation IR_StrengthReduction_DivSigned32ByOne = new IR.StrengthReduction.DivSigned32ByOne();
		public static readonly BaseTransformation IR_StrengthReduction_DivSigned64ByOne = new IR.StrengthReduction.DivSigned64ByOne();
		public static readonly BaseTransformation IR_StrengthReduction_DivUnsigned32ByOne = new IR.StrengthReduction.DivUnsigned32ByOne();
		public static readonly BaseTransformation IR_StrengthReduction_DivUnsigned64ByOne = new IR.StrengthReduction.DivUnsigned64ByOne();
		public static readonly BaseTransformation IR_StrengthReduction_DivUnsigned32ByPowerOfTwo = new IR.StrengthReduction.DivUnsigned32ByPowerOfTwo();
		public static readonly BaseTransformation IR_StrengthReduction_DivUnsigned64ByPowerOfTwo = new IR.StrengthReduction.DivUnsigned64ByPowerOfTwo();
		public static readonly BaseTransformation IR_StrengthReduction_DivSigned32ByPowerOfTwo = new IR.StrengthReduction.DivSigned32ByPowerOfTwo();
		public static readonly BaseTransformation IR_StrengthReduction_DivSigned64ByPowerOfTwo = new IR.StrengthReduction.DivSigned64ByPowerOfTwo();
		public static readonly BaseTransformation IR_StrengthReduction_RemUnsigned32ByPowerOfTwo = new IR.StrengthReduction.RemUnsigned32ByPowerOfTwo();
		public static readonly BaseTransformation IR_StrengthReduction_RemUnsigned64ByPowerOfTwo = new IR.StrengthReduction.RemUnsigned64ByPowerOfTwo();
		public static readonly BaseTransformation IR_Reorder_MulUnsigned32WithShiftLeft32 = new IR.Reorder.MulUnsigned32WithShiftLeft32();
		public static readonly BaseTransformation IR_Reorder_MulUnsigned32WithShiftLeft32_v1 = new IR.Reorder.MulUnsigned32WithShiftLeft32_v1();
		public static readonly BaseTransformation IR_Reorder_MulUnsigned64WithShiftLeft64 = new IR.Reorder.MulUnsigned64WithShiftLeft64();
		public static readonly BaseTransformation IR_Reorder_MulUnsigned64WithShiftLeft64_v1 = new IR.Reorder.MulUnsigned64WithShiftLeft64_v1();
		public static readonly BaseTransformation IR_Reorder_MulSigned32WithShiftLeft32 = new IR.Reorder.MulSigned32WithShiftLeft32();
		public static readonly BaseTransformation IR_Reorder_MulSigned32WithShiftLeft32_v1 = new IR.Reorder.MulSigned32WithShiftLeft32_v1();
		public static readonly BaseTransformation IR_Reorder_MulSigned64WithShiftLeft64 = new IR.Reorder.MulSigned64WithShiftLeft64();
		public static readonly BaseTransformation IR_Reorder_MulSigned64WithShiftLeft64_v1 = new IR.Reorder.MulSigned64WithShiftLeft64_v1();
		public static readonly BaseTransformation IR_Reorder_SubToAdd32 = new IR.Reorder.SubToAdd32();
		public static readonly BaseTransformation IR_Reorder_SubToAdd64 = new IR.Reorder.SubToAdd64();
		public static readonly BaseTransformation IR_ConstantMove_Add32Expression = new IR.ConstantMove.Add32Expression();
		public static readonly BaseTransformation IR_ConstantMove_Add32Expression_v1 = new IR.ConstantMove.Add32Expression_v1();
		public static readonly BaseTransformation IR_ConstantMove_Add32Expression_v2 = new IR.ConstantMove.Add32Expression_v2();
		public static readonly BaseTransformation IR_ConstantMove_Add32Expression_v3 = new IR.ConstantMove.Add32Expression_v3();
		public static readonly BaseTransformation IR_ConstantMove_Add64Expression = new IR.ConstantMove.Add64Expression();
		public static readonly BaseTransformation IR_ConstantMove_Add64Expression_v1 = new IR.ConstantMove.Add64Expression_v1();
		public static readonly BaseTransformation IR_ConstantMove_Add64Expression_v2 = new IR.ConstantMove.Add64Expression_v2();
		public static readonly BaseTransformation IR_ConstantMove_Add64Expression_v3 = new IR.ConstantMove.Add64Expression_v3();
		public static readonly BaseTransformation IR_ConstantMove_AddR4Expression = new IR.ConstantMove.AddR4Expression();
		public static readonly BaseTransformation IR_ConstantMove_AddR4Expression_v1 = new IR.ConstantMove.AddR4Expression_v1();
		public static readonly BaseTransformation IR_ConstantMove_AddR4Expression_v2 = new IR.ConstantMove.AddR4Expression_v2();
		public static readonly BaseTransformation IR_ConstantMove_AddR4Expression_v3 = new IR.ConstantMove.AddR4Expression_v3();
		public static readonly BaseTransformation IR_ConstantMove_AddR8Expression = new IR.ConstantMove.AddR8Expression();
		public static readonly BaseTransformation IR_ConstantMove_AddR8Expression_v1 = new IR.ConstantMove.AddR8Expression_v1();
		public static readonly BaseTransformation IR_ConstantMove_AddR8Expression_v2 = new IR.ConstantMove.AddR8Expression_v2();
		public static readonly BaseTransformation IR_ConstantMove_AddR8Expression_v3 = new IR.ConstantMove.AddR8Expression_v3();
		public static readonly BaseTransformation IR_ConstantMove_And32Expression = new IR.ConstantMove.And32Expression();
		public static readonly BaseTransformation IR_ConstantMove_And32Expression_v1 = new IR.ConstantMove.And32Expression_v1();
		public static readonly BaseTransformation IR_ConstantMove_And32Expression_v2 = new IR.ConstantMove.And32Expression_v2();
		public static readonly BaseTransformation IR_ConstantMove_And32Expression_v3 = new IR.ConstantMove.And32Expression_v3();
		public static readonly BaseTransformation IR_ConstantMove_And64Expression = new IR.ConstantMove.And64Expression();
		public static readonly BaseTransformation IR_ConstantMove_And64Expression_v1 = new IR.ConstantMove.And64Expression_v1();
		public static readonly BaseTransformation IR_ConstantMove_And64Expression_v2 = new IR.ConstantMove.And64Expression_v2();
		public static readonly BaseTransformation IR_ConstantMove_And64Expression_v3 = new IR.ConstantMove.And64Expression_v3();
		public static readonly BaseTransformation IR_ConstantMove_Or32Expression = new IR.ConstantMove.Or32Expression();
		public static readonly BaseTransformation IR_ConstantMove_Or32Expression_v1 = new IR.ConstantMove.Or32Expression_v1();
		public static readonly BaseTransformation IR_ConstantMove_Or32Expression_v2 = new IR.ConstantMove.Or32Expression_v2();
		public static readonly BaseTransformation IR_ConstantMove_Or32Expression_v3 = new IR.ConstantMove.Or32Expression_v3();
		public static readonly BaseTransformation IR_ConstantMove_Or64Expression = new IR.ConstantMove.Or64Expression();
		public static readonly BaseTransformation IR_ConstantMove_Or64Expression_v1 = new IR.ConstantMove.Or64Expression_v1();
		public static readonly BaseTransformation IR_ConstantMove_Or64Expression_v2 = new IR.ConstantMove.Or64Expression_v2();
		public static readonly BaseTransformation IR_ConstantMove_Or64Expression_v3 = new IR.ConstantMove.Or64Expression_v3();
		public static readonly BaseTransformation IR_ConstantMove_Xor32Expression = new IR.ConstantMove.Xor32Expression();
		public static readonly BaseTransformation IR_ConstantMove_Xor32Expression_v1 = new IR.ConstantMove.Xor32Expression_v1();
		public static readonly BaseTransformation IR_ConstantMove_Xor32Expression_v2 = new IR.ConstantMove.Xor32Expression_v2();
		public static readonly BaseTransformation IR_ConstantMove_Xor32Expression_v3 = new IR.ConstantMove.Xor32Expression_v3();
		public static readonly BaseTransformation IR_ConstantMove_Xor64Expression = new IR.ConstantMove.Xor64Expression();
		public static readonly BaseTransformation IR_ConstantMove_Xor64Expression_v1 = new IR.ConstantMove.Xor64Expression_v1();
		public static readonly BaseTransformation IR_ConstantMove_Xor64Expression_v2 = new IR.ConstantMove.Xor64Expression_v2();
		public static readonly BaseTransformation IR_ConstantMove_Xor64Expression_v3 = new IR.ConstantMove.Xor64Expression_v3();
		public static readonly BaseTransformation IR_ConstantMove_MulUnsigned32Expression = new IR.ConstantMove.MulUnsigned32Expression();
		public static readonly BaseTransformation IR_ConstantMove_MulUnsigned32Expression_v1 = new IR.ConstantMove.MulUnsigned32Expression_v1();
		public static readonly BaseTransformation IR_ConstantMove_MulUnsigned32Expression_v2 = new IR.ConstantMove.MulUnsigned32Expression_v2();
		public static readonly BaseTransformation IR_ConstantMove_MulUnsigned32Expression_v3 = new IR.ConstantMove.MulUnsigned32Expression_v3();
		public static readonly BaseTransformation IR_ConstantMove_MulUnsigned64Expression = new IR.ConstantMove.MulUnsigned64Expression();
		public static readonly BaseTransformation IR_ConstantMove_MulUnsigned64Expression_v1 = new IR.ConstantMove.MulUnsigned64Expression_v1();
		public static readonly BaseTransformation IR_ConstantMove_MulUnsigned64Expression_v2 = new IR.ConstantMove.MulUnsigned64Expression_v2();
		public static readonly BaseTransformation IR_ConstantMove_MulUnsigned64Expression_v3 = new IR.ConstantMove.MulUnsigned64Expression_v3();
		public static readonly BaseTransformation IR_ConstantMove_MulSigned32Expression = new IR.ConstantMove.MulSigned32Expression();
		public static readonly BaseTransformation IR_ConstantMove_MulSigned32Expression_v1 = new IR.ConstantMove.MulSigned32Expression_v1();
		public static readonly BaseTransformation IR_ConstantMove_MulSigned32Expression_v2 = new IR.ConstantMove.MulSigned32Expression_v2();
		public static readonly BaseTransformation IR_ConstantMove_MulSigned32Expression_v3 = new IR.ConstantMove.MulSigned32Expression_v3();
		public static readonly BaseTransformation IR_ConstantMove_MulSigned64Expression = new IR.ConstantMove.MulSigned64Expression();
		public static readonly BaseTransformation IR_ConstantMove_MulSigned64Expression_v1 = new IR.ConstantMove.MulSigned64Expression_v1();
		public static readonly BaseTransformation IR_ConstantMove_MulSigned64Expression_v2 = new IR.ConstantMove.MulSigned64Expression_v2();
		public static readonly BaseTransformation IR_ConstantMove_MulSigned64Expression_v3 = new IR.ConstantMove.MulSigned64Expression_v3();
		public static readonly BaseTransformation IR_ConstantMove_MulR4Expression = new IR.ConstantMove.MulR4Expression();
		public static readonly BaseTransformation IR_ConstantMove_MulR4Expression_v1 = new IR.ConstantMove.MulR4Expression_v1();
		public static readonly BaseTransformation IR_ConstantMove_MulR4Expression_v2 = new IR.ConstantMove.MulR4Expression_v2();
		public static readonly BaseTransformation IR_ConstantMove_MulR4Expression_v3 = new IR.ConstantMove.MulR4Expression_v3();
		public static readonly BaseTransformation IR_ConstantMove_MulR8Expression = new IR.ConstantMove.MulR8Expression();
		public static readonly BaseTransformation IR_ConstantMove_MulR8Expression_v1 = new IR.ConstantMove.MulR8Expression_v1();
		public static readonly BaseTransformation IR_ConstantMove_MulR8Expression_v2 = new IR.ConstantMove.MulR8Expression_v2();
		public static readonly BaseTransformation IR_ConstantMove_MulR8Expression_v3 = new IR.ConstantMove.MulR8Expression_v3();
		public static readonly BaseTransformation IR_ConstantFolding_MulSignedShiftLeft32 = new IR.ConstantFolding.MulSignedShiftLeft32();
		public static readonly BaseTransformation IR_ConstantFolding_MulSignedShiftLeft32_v1 = new IR.ConstantFolding.MulSignedShiftLeft32_v1();
		public static readonly BaseTransformation IR_ConstantFolding_MulSignedShiftLeft64 = new IR.ConstantFolding.MulSignedShiftLeft64();
		public static readonly BaseTransformation IR_ConstantFolding_MulSignedShiftLeft64_v1 = new IR.ConstantFolding.MulSignedShiftLeft64_v1();
		public static readonly BaseTransformation IR_ConstantFolding_MulUnsignedShiftLeft32 = new IR.ConstantFolding.MulUnsignedShiftLeft32();
		public static readonly BaseTransformation IR_ConstantFolding_MulUnsignedShiftLeft32_v1 = new IR.ConstantFolding.MulUnsignedShiftLeft32_v1();
		public static readonly BaseTransformation IR_ConstantFolding_MulUnsignedShiftLeft64 = new IR.ConstantFolding.MulUnsignedShiftLeft64();
		public static readonly BaseTransformation IR_ConstantFolding_MulUnsignedShiftLeft64_v1 = new IR.ConstantFolding.MulUnsignedShiftLeft64_v1();
		public static readonly BaseTransformation IR_ConstantFolding_Add32x2 = new IR.ConstantFolding.Add32x2();
		public static readonly BaseTransformation IR_ConstantFolding_Add32x2_v1 = new IR.ConstantFolding.Add32x2_v1();
		public static readonly BaseTransformation IR_ConstantFolding_Add32x2_v2 = new IR.ConstantFolding.Add32x2_v2();
		public static readonly BaseTransformation IR_ConstantFolding_Add32x2_v3 = new IR.ConstantFolding.Add32x2_v3();
		public static readonly BaseTransformation IR_ConstantFolding_Add64x2 = new IR.ConstantFolding.Add64x2();
		public static readonly BaseTransformation IR_ConstantFolding_Add64x2_v1 = new IR.ConstantFolding.Add64x2_v1();
		public static readonly BaseTransformation IR_ConstantFolding_Add64x2_v2 = new IR.ConstantFolding.Add64x2_v2();
		public static readonly BaseTransformation IR_ConstantFolding_Add64x2_v3 = new IR.ConstantFolding.Add64x2_v3();
		public static readonly BaseTransformation IR_ConstantFolding_AddR4x2 = new IR.ConstantFolding.AddR4x2();
		public static readonly BaseTransformation IR_ConstantFolding_AddR4x2_v1 = new IR.ConstantFolding.AddR4x2_v1();
		public static readonly BaseTransformation IR_ConstantFolding_AddR4x2_v2 = new IR.ConstantFolding.AddR4x2_v2();
		public static readonly BaseTransformation IR_ConstantFolding_AddR4x2_v3 = new IR.ConstantFolding.AddR4x2_v3();
		public static readonly BaseTransformation IR_ConstantFolding_AddR8x2 = new IR.ConstantFolding.AddR8x2();
		public static readonly BaseTransformation IR_ConstantFolding_AddR8x2_v1 = new IR.ConstantFolding.AddR8x2_v1();
		public static readonly BaseTransformation IR_ConstantFolding_AddR8x2_v2 = new IR.ConstantFolding.AddR8x2_v2();
		public static readonly BaseTransformation IR_ConstantFolding_AddR8x2_v3 = new IR.ConstantFolding.AddR8x2_v3();
		public static readonly BaseTransformation IR_ConstantFolding_Sub32x2 = new IR.ConstantFolding.Sub32x2();
		public static readonly BaseTransformation IR_ConstantFolding_Sub64x2 = new IR.ConstantFolding.Sub64x2();
		public static readonly BaseTransformation IR_ConstantFolding_SubR4x2 = new IR.ConstantFolding.SubR4x2();
		public static readonly BaseTransformation IR_ConstantFolding_SubR8x2 = new IR.ConstantFolding.SubR8x2();
		public static readonly BaseTransformation IR_ConstantFolding_MulSigned32x2 = new IR.ConstantFolding.MulSigned32x2();
		public static readonly BaseTransformation IR_ConstantFolding_MulSigned32x2_v1 = new IR.ConstantFolding.MulSigned32x2_v1();
		public static readonly BaseTransformation IR_ConstantFolding_MulSigned32x2_v2 = new IR.ConstantFolding.MulSigned32x2_v2();
		public static readonly BaseTransformation IR_ConstantFolding_MulSigned32x2_v3 = new IR.ConstantFolding.MulSigned32x2_v3();
		public static readonly BaseTransformation IR_ConstantFolding_MulSigned64x2 = new IR.ConstantFolding.MulSigned64x2();
		public static readonly BaseTransformation IR_ConstantFolding_MulSigned64x2_v1 = new IR.ConstantFolding.MulSigned64x2_v1();
		public static readonly BaseTransformation IR_ConstantFolding_MulSigned64x2_v2 = new IR.ConstantFolding.MulSigned64x2_v2();
		public static readonly BaseTransformation IR_ConstantFolding_MulSigned64x2_v3 = new IR.ConstantFolding.MulSigned64x2_v3();
		public static readonly BaseTransformation IR_ConstantFolding_MulR4x2 = new IR.ConstantFolding.MulR4x2();
		public static readonly BaseTransformation IR_ConstantFolding_MulR4x2_v1 = new IR.ConstantFolding.MulR4x2_v1();
		public static readonly BaseTransformation IR_ConstantFolding_MulR4x2_v2 = new IR.ConstantFolding.MulR4x2_v2();
		public static readonly BaseTransformation IR_ConstantFolding_MulR4x2_v3 = new IR.ConstantFolding.MulR4x2_v3();
		public static readonly BaseTransformation IR_ConstantFolding_MulR8x2 = new IR.ConstantFolding.MulR8x2();
		public static readonly BaseTransformation IR_ConstantFolding_MulR8x2_v1 = new IR.ConstantFolding.MulR8x2_v1();
		public static readonly BaseTransformation IR_ConstantFolding_MulR8x2_v2 = new IR.ConstantFolding.MulR8x2_v2();
		public static readonly BaseTransformation IR_ConstantFolding_MulR8x2_v3 = new IR.ConstantFolding.MulR8x2_v3();
		public static readonly BaseTransformation IR_ConstantFolding_MulUnsigned32x2 = new IR.ConstantFolding.MulUnsigned32x2();
		public static readonly BaseTransformation IR_ConstantFolding_MulUnsigned32x2_v1 = new IR.ConstantFolding.MulUnsigned32x2_v1();
		public static readonly BaseTransformation IR_ConstantFolding_MulUnsigned32x2_v2 = new IR.ConstantFolding.MulUnsigned32x2_v2();
		public static readonly BaseTransformation IR_ConstantFolding_MulUnsigned32x2_v3 = new IR.ConstantFolding.MulUnsigned32x2_v3();
		public static readonly BaseTransformation IR_ConstantFolding_MulUnsigned64x2 = new IR.ConstantFolding.MulUnsigned64x2();
		public static readonly BaseTransformation IR_ConstantFolding_MulUnsigned64x2_v1 = new IR.ConstantFolding.MulUnsigned64x2_v1();
		public static readonly BaseTransformation IR_ConstantFolding_MulUnsigned64x2_v2 = new IR.ConstantFolding.MulUnsigned64x2_v2();
		public static readonly BaseTransformation IR_ConstantFolding_MulUnsigned64x2_v3 = new IR.ConstantFolding.MulUnsigned64x2_v3();
		public static readonly BaseTransformation IR_ConstantFolding_Or32x2 = new IR.ConstantFolding.Or32x2();
		public static readonly BaseTransformation IR_ConstantFolding_Or32x2_v1 = new IR.ConstantFolding.Or32x2_v1();
		public static readonly BaseTransformation IR_ConstantFolding_Or32x2_v2 = new IR.ConstantFolding.Or32x2_v2();
		public static readonly BaseTransformation IR_ConstantFolding_Or32x2_v3 = new IR.ConstantFolding.Or32x2_v3();
		public static readonly BaseTransformation IR_ConstantFolding_Or64x2 = new IR.ConstantFolding.Or64x2();
		public static readonly BaseTransformation IR_ConstantFolding_Or64x2_v1 = new IR.ConstantFolding.Or64x2_v1();
		public static readonly BaseTransformation IR_ConstantFolding_Or64x2_v2 = new IR.ConstantFolding.Or64x2_v2();
		public static readonly BaseTransformation IR_ConstantFolding_Or64x2_v3 = new IR.ConstantFolding.Or64x2_v3();
		public static readonly BaseTransformation IR_ConstantFolding_And32x2 = new IR.ConstantFolding.And32x2();
		public static readonly BaseTransformation IR_ConstantFolding_And32x2_v1 = new IR.ConstantFolding.And32x2_v1();
		public static readonly BaseTransformation IR_ConstantFolding_And32x2_v2 = new IR.ConstantFolding.And32x2_v2();
		public static readonly BaseTransformation IR_ConstantFolding_And32x2_v3 = new IR.ConstantFolding.And32x2_v3();
		public static readonly BaseTransformation IR_ConstantFolding_And64x2 = new IR.ConstantFolding.And64x2();
		public static readonly BaseTransformation IR_ConstantFolding_And64x2_v1 = new IR.ConstantFolding.And64x2_v1();
		public static readonly BaseTransformation IR_ConstantFolding_And64x2_v2 = new IR.ConstantFolding.And64x2_v2();
		public static readonly BaseTransformation IR_ConstantFolding_And64x2_v3 = new IR.ConstantFolding.And64x2_v3();
		public static readonly BaseTransformation IR_ConstantFolding_Xor32x2 = new IR.ConstantFolding.Xor32x2();
		public static readonly BaseTransformation IR_ConstantFolding_Xor32x2_v1 = new IR.ConstantFolding.Xor32x2_v1();
		public static readonly BaseTransformation IR_ConstantFolding_Xor32x2_v2 = new IR.ConstantFolding.Xor32x2_v2();
		public static readonly BaseTransformation IR_ConstantFolding_Xor32x2_v3 = new IR.ConstantFolding.Xor32x2_v3();
		public static readonly BaseTransformation IR_ConstantFolding_Xor64x2 = new IR.ConstantFolding.Xor64x2();
		public static readonly BaseTransformation IR_ConstantFolding_Xor64x2_v1 = new IR.ConstantFolding.Xor64x2_v1();
		public static readonly BaseTransformation IR_ConstantFolding_Xor64x2_v2 = new IR.ConstantFolding.Xor64x2_v2();
		public static readonly BaseTransformation IR_ConstantFolding_Xor64x2_v3 = new IR.ConstantFolding.Xor64x2_v3();
		public static readonly BaseTransformation IR_ConstantFolding_AddSub32 = new IR.ConstantFolding.AddSub32();
		public static readonly BaseTransformation IR_ConstantFolding_AddSub32_v1 = new IR.ConstantFolding.AddSub32_v1();
		public static readonly BaseTransformation IR_ConstantFolding_AddSub64 = new IR.ConstantFolding.AddSub64();
		public static readonly BaseTransformation IR_ConstantFolding_AddSub64_v1 = new IR.ConstantFolding.AddSub64_v1();
		public static readonly BaseTransformation IR_ConstantFolding_AddSubR4 = new IR.ConstantFolding.AddSubR4();
		public static readonly BaseTransformation IR_ConstantFolding_AddSubR4_v1 = new IR.ConstantFolding.AddSubR4_v1();
		public static readonly BaseTransformation IR_ConstantFolding_AddSubR8 = new IR.ConstantFolding.AddSubR8();
		public static readonly BaseTransformation IR_ConstantFolding_AddSubR8_v1 = new IR.ConstantFolding.AddSubR8_v1();
		public static readonly BaseTransformation IR_ConstantFolding_SubAdd32 = new IR.ConstantFolding.SubAdd32();
		public static readonly BaseTransformation IR_ConstantFolding_SubAdd32_v1 = new IR.ConstantFolding.SubAdd32_v1();
		public static readonly BaseTransformation IR_ConstantFolding_SubAdd64 = new IR.ConstantFolding.SubAdd64();
		public static readonly BaseTransformation IR_ConstantFolding_SubAdd64_v1 = new IR.ConstantFolding.SubAdd64_v1();
		public static readonly BaseTransformation IR_ConstantFolding_SubAddR4 = new IR.ConstantFolding.SubAddR4();
		public static readonly BaseTransformation IR_ConstantFolding_SubAddR4_v1 = new IR.ConstantFolding.SubAddR4_v1();
		public static readonly BaseTransformation IR_ConstantFolding_SubAddR8 = new IR.ConstantFolding.SubAddR8();
		public static readonly BaseTransformation IR_ConstantFolding_SubAddR8_v1 = new IR.ConstantFolding.SubAddR8_v1();
		public static readonly BaseTransformation IR_ConstantFolding_ShiftLeft32x2 = new IR.ConstantFolding.ShiftLeft32x2();
		public static readonly BaseTransformation IR_ConstantFolding_ShiftLeft64x2 = new IR.ConstantFolding.ShiftLeft64x2();
		public static readonly BaseTransformation IR_ConstantFolding_ShiftRight32x2 = new IR.ConstantFolding.ShiftRight32x2();
		public static readonly BaseTransformation IR_ConstantFolding_ShiftRight64x2 = new IR.ConstantFolding.ShiftRight64x2();
		public static readonly BaseTransformation IR_ConstantFolding_Load32FoldAdd32 = new IR.ConstantFolding.Load32FoldAdd32();
		public static readonly BaseTransformation IR_ConstantFolding_Load64FoldAdd32 = new IR.ConstantFolding.Load64FoldAdd32();
		public static readonly BaseTransformation IR_ConstantFolding_LoadR4FoldAdd32 = new IR.ConstantFolding.LoadR4FoldAdd32();
		public static readonly BaseTransformation IR_ConstantFolding_LoadR8FoldAdd32 = new IR.ConstantFolding.LoadR8FoldAdd32();
		public static readonly BaseTransformation IR_ConstantFolding_LoadSignExtend8x32FoldAdd32 = new IR.ConstantFolding.LoadSignExtend8x32FoldAdd32();
		public static readonly BaseTransformation IR_ConstantFolding_LoadSignExtend16x32FoldAdd32 = new IR.ConstantFolding.LoadSignExtend16x32FoldAdd32();
		public static readonly BaseTransformation IR_ConstantFolding_LoadSignExtend8x64FoldAdd32 = new IR.ConstantFolding.LoadSignExtend8x64FoldAdd32();
		public static readonly BaseTransformation IR_ConstantFolding_LoadSignExtend16x64FoldAdd32 = new IR.ConstantFolding.LoadSignExtend16x64FoldAdd32();
		public static readonly BaseTransformation IR_ConstantFolding_LoadSignExtend32x64FoldAdd32 = new IR.ConstantFolding.LoadSignExtend32x64FoldAdd32();
		public static readonly BaseTransformation IR_ConstantFolding_LoadZeroExtend8x32FoldAdd32 = new IR.ConstantFolding.LoadZeroExtend8x32FoldAdd32();
		public static readonly BaseTransformation IR_ConstantFolding_LoadZeroExtend16x32FoldAdd32 = new IR.ConstantFolding.LoadZeroExtend16x32FoldAdd32();
		public static readonly BaseTransformation IR_ConstantFolding_LoadZeroExtend8x64FoldAdd32 = new IR.ConstantFolding.LoadZeroExtend8x64FoldAdd32();
		public static readonly BaseTransformation IR_ConstantFolding_LoadZeroExtend16x64FoldAdd32 = new IR.ConstantFolding.LoadZeroExtend16x64FoldAdd32();
		public static readonly BaseTransformation IR_ConstantFolding_LoadZeroExtend32x64FoldAdd32 = new IR.ConstantFolding.LoadZeroExtend32x64FoldAdd32();
		public static readonly BaseTransformation IR_ConstantFolding_Load32FoldAdd64 = new IR.ConstantFolding.Load32FoldAdd64();
		public static readonly BaseTransformation IR_ConstantFolding_Load64FoldAdd64 = new IR.ConstantFolding.Load64FoldAdd64();
		public static readonly BaseTransformation IR_ConstantFolding_LoadR4FoldAdd64 = new IR.ConstantFolding.LoadR4FoldAdd64();
		public static readonly BaseTransformation IR_ConstantFolding_LoadR8FoldAdd64 = new IR.ConstantFolding.LoadR8FoldAdd64();
		public static readonly BaseTransformation IR_ConstantFolding_LoadSignExtend8x32FoldAdd64 = new IR.ConstantFolding.LoadSignExtend8x32FoldAdd64();
		public static readonly BaseTransformation IR_ConstantFolding_LoadSignExtend16x32FoldAdd64 = new IR.ConstantFolding.LoadSignExtend16x32FoldAdd64();
		public static readonly BaseTransformation IR_ConstantFolding_LoadSignExtend8x64FoldAdd64 = new IR.ConstantFolding.LoadSignExtend8x64FoldAdd64();
		public static readonly BaseTransformation IR_ConstantFolding_LoadSignExtend16x64FoldAdd64 = new IR.ConstantFolding.LoadSignExtend16x64FoldAdd64();
		public static readonly BaseTransformation IR_ConstantFolding_LoadSignExtend32x64FoldAdd64 = new IR.ConstantFolding.LoadSignExtend32x64FoldAdd64();
		public static readonly BaseTransformation IR_ConstantFolding_LoadZeroExtend8x32FoldAdd64 = new IR.ConstantFolding.LoadZeroExtend8x32FoldAdd64();
		public static readonly BaseTransformation IR_ConstantFolding_LoadZeroExtend16x32FoldAdd64 = new IR.ConstantFolding.LoadZeroExtend16x32FoldAdd64();
		public static readonly BaseTransformation IR_ConstantFolding_LoadZeroExtend8x64FoldAdd64 = new IR.ConstantFolding.LoadZeroExtend8x64FoldAdd64();
		public static readonly BaseTransformation IR_ConstantFolding_LoadZeroExtend16x64FoldAdd64 = new IR.ConstantFolding.LoadZeroExtend16x64FoldAdd64();
		public static readonly BaseTransformation IR_ConstantFolding_LoadZeroExtend32x64FoldAdd64 = new IR.ConstantFolding.LoadZeroExtend32x64FoldAdd64();
		public static readonly BaseTransformation IR_ConstantFolding_Load32FoldSub32 = new IR.ConstantFolding.Load32FoldSub32();
		public static readonly BaseTransformation IR_ConstantFolding_Load64FoldSub32 = new IR.ConstantFolding.Load64FoldSub32();
		public static readonly BaseTransformation IR_ConstantFolding_LoadR4FoldSub32 = new IR.ConstantFolding.LoadR4FoldSub32();
		public static readonly BaseTransformation IR_ConstantFolding_LoadR8FoldSub32 = new IR.ConstantFolding.LoadR8FoldSub32();
		public static readonly BaseTransformation IR_ConstantFolding_LoadSignExtend8x32FoldSub32 = new IR.ConstantFolding.LoadSignExtend8x32FoldSub32();
		public static readonly BaseTransformation IR_ConstantFolding_LoadSignExtend16x32FoldSub32 = new IR.ConstantFolding.LoadSignExtend16x32FoldSub32();
		public static readonly BaseTransformation IR_ConstantFolding_LoadSignExtend8x64FoldSub32 = new IR.ConstantFolding.LoadSignExtend8x64FoldSub32();
		public static readonly BaseTransformation IR_ConstantFolding_LoadSignExtend16x64FoldSub32 = new IR.ConstantFolding.LoadSignExtend16x64FoldSub32();
		public static readonly BaseTransformation IR_ConstantFolding_LoadSignExtend32x64FoldSub32 = new IR.ConstantFolding.LoadSignExtend32x64FoldSub32();
		public static readonly BaseTransformation IR_ConstantFolding_LoadZeroExtend8x32FoldSub32 = new IR.ConstantFolding.LoadZeroExtend8x32FoldSub32();
		public static readonly BaseTransformation IR_ConstantFolding_LoadZeroExtend16x32FoldSub32 = new IR.ConstantFolding.LoadZeroExtend16x32FoldSub32();
		public static readonly BaseTransformation IR_ConstantFolding_LoadZeroExtend8x64FoldSub32 = new IR.ConstantFolding.LoadZeroExtend8x64FoldSub32();
		public static readonly BaseTransformation IR_ConstantFolding_LoadZeroExtend16x64FoldSub32 = new IR.ConstantFolding.LoadZeroExtend16x64FoldSub32();
		public static readonly BaseTransformation IR_ConstantFolding_LoadZeroExtend32x64FoldSub32 = new IR.ConstantFolding.LoadZeroExtend32x64FoldSub32();
		public static readonly BaseTransformation IR_ConstantFolding_Load32FoldSub64 = new IR.ConstantFolding.Load32FoldSub64();
		public static readonly BaseTransformation IR_ConstantFolding_Load64FoldSub64 = new IR.ConstantFolding.Load64FoldSub64();
		public static readonly BaseTransformation IR_ConstantFolding_LoadR4FoldSub64 = new IR.ConstantFolding.LoadR4FoldSub64();
		public static readonly BaseTransformation IR_ConstantFolding_LoadR8FoldSub64 = new IR.ConstantFolding.LoadR8FoldSub64();
		public static readonly BaseTransformation IR_ConstantFolding_LoadSignExtend8x32FoldSub64 = new IR.ConstantFolding.LoadSignExtend8x32FoldSub64();
		public static readonly BaseTransformation IR_ConstantFolding_LoadSignExtend16x32FoldSub64 = new IR.ConstantFolding.LoadSignExtend16x32FoldSub64();
		public static readonly BaseTransformation IR_ConstantFolding_LoadSignExtend8x64FoldSub64 = new IR.ConstantFolding.LoadSignExtend8x64FoldSub64();
		public static readonly BaseTransformation IR_ConstantFolding_LoadSignExtend16x64FoldSub64 = new IR.ConstantFolding.LoadSignExtend16x64FoldSub64();
		public static readonly BaseTransformation IR_ConstantFolding_LoadSignExtend32x64FoldSub64 = new IR.ConstantFolding.LoadSignExtend32x64FoldSub64();
		public static readonly BaseTransformation IR_ConstantFolding_LoadZeroExtend8x32FoldSub64 = new IR.ConstantFolding.LoadZeroExtend8x32FoldSub64();
		public static readonly BaseTransformation IR_ConstantFolding_LoadZeroExtend16x32FoldSub64 = new IR.ConstantFolding.LoadZeroExtend16x32FoldSub64();
		public static readonly BaseTransformation IR_ConstantFolding_LoadZeroExtend8x64FoldSub64 = new IR.ConstantFolding.LoadZeroExtend8x64FoldSub64();
		public static readonly BaseTransformation IR_ConstantFolding_LoadZeroExtend16x64FoldSub64 = new IR.ConstantFolding.LoadZeroExtend16x64FoldSub64();
		public static readonly BaseTransformation IR_ConstantFolding_LoadZeroExtend32x64FoldSub64 = new IR.ConstantFolding.LoadZeroExtend32x64FoldSub64();
		public static readonly BaseTransformation IR_ConstantFolding_Store8FoldAdd32 = new IR.ConstantFolding.Store8FoldAdd32();
		public static readonly BaseTransformation IR_ConstantFolding_Store8FoldAdd64 = new IR.ConstantFolding.Store8FoldAdd64();
		public static readonly BaseTransformation IR_ConstantFolding_Store8FoldSub32 = new IR.ConstantFolding.Store8FoldSub32();
		public static readonly BaseTransformation IR_ConstantFolding_Store8FoldSub64 = new IR.ConstantFolding.Store8FoldSub64();
		public static readonly BaseTransformation IR_ConstantFolding_Store16FoldAdd32 = new IR.ConstantFolding.Store16FoldAdd32();
		public static readonly BaseTransformation IR_ConstantFolding_Store16FoldAdd64 = new IR.ConstantFolding.Store16FoldAdd64();
		public static readonly BaseTransformation IR_ConstantFolding_Store16FoldSub32 = new IR.ConstantFolding.Store16FoldSub32();
		public static readonly BaseTransformation IR_ConstantFolding_Store16FoldSub64 = new IR.ConstantFolding.Store16FoldSub64();
		public static readonly BaseTransformation IR_ConstantFolding_Store32FoldAdd32 = new IR.ConstantFolding.Store32FoldAdd32();
		public static readonly BaseTransformation IR_ConstantFolding_Store32FoldAdd64 = new IR.ConstantFolding.Store32FoldAdd64();
		public static readonly BaseTransformation IR_ConstantFolding_Store32FoldSub32 = new IR.ConstantFolding.Store32FoldSub32();
		public static readonly BaseTransformation IR_ConstantFolding_Store32FoldSub64 = new IR.ConstantFolding.Store32FoldSub64();
		public static readonly BaseTransformation IR_ConstantFolding_Store64FoldAdd32 = new IR.ConstantFolding.Store64FoldAdd32();
		public static readonly BaseTransformation IR_ConstantFolding_Store64FoldAdd64 = new IR.ConstantFolding.Store64FoldAdd64();
		public static readonly BaseTransformation IR_ConstantFolding_Store64FoldSub32 = new IR.ConstantFolding.Store64FoldSub32();
		public static readonly BaseTransformation IR_ConstantFolding_Store64FoldSub64 = new IR.ConstantFolding.Store64FoldSub64();
		public static readonly BaseTransformation IR_ConstantFolding_StoreR4FoldAdd32 = new IR.ConstantFolding.StoreR4FoldAdd32();
		public static readonly BaseTransformation IR_ConstantFolding_StoreR4FoldAdd64 = new IR.ConstantFolding.StoreR4FoldAdd64();
		public static readonly BaseTransformation IR_ConstantFolding_StoreR4FoldSub32 = new IR.ConstantFolding.StoreR4FoldSub32();
		public static readonly BaseTransformation IR_ConstantFolding_StoreR4FoldSub64 = new IR.ConstantFolding.StoreR4FoldSub64();
		public static readonly BaseTransformation IR_ConstantFolding_StoreR8FoldAdd32 = new IR.ConstantFolding.StoreR8FoldAdd32();
		public static readonly BaseTransformation IR_ConstantFolding_StoreR8FoldAdd64 = new IR.ConstantFolding.StoreR8FoldAdd64();
		public static readonly BaseTransformation IR_ConstantFolding_StoreR8FoldSub32 = new IR.ConstantFolding.StoreR8FoldSub32();
		public static readonly BaseTransformation IR_ConstantFolding_StoreR8FoldSub64 = new IR.ConstantFolding.StoreR8FoldSub64();
		public static readonly BaseTransformation IR_ConstantFolding_Load32AddressFold = new IR.ConstantFolding.Load32AddressFold();
		public static readonly BaseTransformation IR_ConstantFolding_Load64AddressFold = new IR.ConstantFolding.Load64AddressFold();
		public static readonly BaseTransformation IR_ConstantFolding_LoadR4AddressFold = new IR.ConstantFolding.LoadR4AddressFold();
		public static readonly BaseTransformation IR_ConstantFolding_LoadR8AddressFold = new IR.ConstantFolding.LoadR8AddressFold();
		public static readonly BaseTransformation IR_ConstantFolding_LoadSignExtend8x32AddressFold = new IR.ConstantFolding.LoadSignExtend8x32AddressFold();
		public static readonly BaseTransformation IR_ConstantFolding_LoadSignExtend16x32AddressFold = new IR.ConstantFolding.LoadSignExtend16x32AddressFold();
		public static readonly BaseTransformation IR_ConstantFolding_LoadSignExtend8x64AddressFold = new IR.ConstantFolding.LoadSignExtend8x64AddressFold();
		public static readonly BaseTransformation IR_ConstantFolding_LoadSignExtend16x64AddressFold = new IR.ConstantFolding.LoadSignExtend16x64AddressFold();
		public static readonly BaseTransformation IR_ConstantFolding_LoadSignExtend32x64AddressFold = new IR.ConstantFolding.LoadSignExtend32x64AddressFold();
		public static readonly BaseTransformation IR_ConstantFolding_LoadZeroExtend8x32AddressFold = new IR.ConstantFolding.LoadZeroExtend8x32AddressFold();
		public static readonly BaseTransformation IR_ConstantFolding_LoadZeroExtend16x32AddressFold = new IR.ConstantFolding.LoadZeroExtend16x32AddressFold();
		public static readonly BaseTransformation IR_ConstantFolding_LoadZeroExtend8x64AddressFold = new IR.ConstantFolding.LoadZeroExtend8x64AddressFold();
		public static readonly BaseTransformation IR_ConstantFolding_LoadZeroExtend16x64AddressFold = new IR.ConstantFolding.LoadZeroExtend16x64AddressFold();
		public static readonly BaseTransformation IR_ConstantFolding_LoadZeroExtend32x64AddressFold = new IR.ConstantFolding.LoadZeroExtend32x64AddressFold();
		public static readonly BaseTransformation IR_Algebraic_Signed32AAPlusBBPlus2AB = new IR.Algebraic.Signed32AAPlusBBPlus2AB();
		public static readonly BaseTransformation IR_Algebraic_Signed32AAPlusBBPlus2AB_v1 = new IR.Algebraic.Signed32AAPlusBBPlus2AB_v1();
		public static readonly BaseTransformation IR_Algebraic_Signed32AAPlusBBPlus2AB_v2 = new IR.Algebraic.Signed32AAPlusBBPlus2AB_v2();
		public static readonly BaseTransformation IR_Algebraic_Signed32AAPlusBBPlus2AB_v3 = new IR.Algebraic.Signed32AAPlusBBPlus2AB_v3();
		public static readonly BaseTransformation IR_Algebraic_Signed32AAPlusBBPlus2AB_v4 = new IR.Algebraic.Signed32AAPlusBBPlus2AB_v4();
		public static readonly BaseTransformation IR_Algebraic_Signed32AAPlusBBPlus2AB_v5 = new IR.Algebraic.Signed32AAPlusBBPlus2AB_v5();
		public static readonly BaseTransformation IR_Algebraic_Signed32AAPlusBBPlus2AB_v6 = new IR.Algebraic.Signed32AAPlusBBPlus2AB_v6();
		public static readonly BaseTransformation IR_Algebraic_Signed32AAPlusBBPlus2AB_v7 = new IR.Algebraic.Signed32AAPlusBBPlus2AB_v7();
		public static readonly BaseTransformation IR_Algebraic_Signed64AAPlusBBPlus2AB = new IR.Algebraic.Signed64AAPlusBBPlus2AB();
		public static readonly BaseTransformation IR_Algebraic_Signed64AAPlusBBPlus2AB_v1 = new IR.Algebraic.Signed64AAPlusBBPlus2AB_v1();
		public static readonly BaseTransformation IR_Algebraic_Signed64AAPlusBBPlus2AB_v2 = new IR.Algebraic.Signed64AAPlusBBPlus2AB_v2();
		public static readonly BaseTransformation IR_Algebraic_Signed64AAPlusBBPlus2AB_v3 = new IR.Algebraic.Signed64AAPlusBBPlus2AB_v3();
		public static readonly BaseTransformation IR_Algebraic_Signed64AAPlusBBPlus2AB_v4 = new IR.Algebraic.Signed64AAPlusBBPlus2AB_v4();
		public static readonly BaseTransformation IR_Algebraic_Signed64AAPlusBBPlus2AB_v5 = new IR.Algebraic.Signed64AAPlusBBPlus2AB_v5();
		public static readonly BaseTransformation IR_Algebraic_Signed64AAPlusBBPlus2AB_v6 = new IR.Algebraic.Signed64AAPlusBBPlus2AB_v6();
		public static readonly BaseTransformation IR_Algebraic_Signed64AAPlusBBPlus2AB_v7 = new IR.Algebraic.Signed64AAPlusBBPlus2AB_v7();
		public static readonly BaseTransformation IR_Algebraic_Unsigned32AAPlusBBPlus2AB = new IR.Algebraic.Unsigned32AAPlusBBPlus2AB();
		public static readonly BaseTransformation IR_Algebraic_Unsigned32AAPlusBBPlus2AB_v1 = new IR.Algebraic.Unsigned32AAPlusBBPlus2AB_v1();
		public static readonly BaseTransformation IR_Algebraic_Unsigned32AAPlusBBPlus2AB_v2 = new IR.Algebraic.Unsigned32AAPlusBBPlus2AB_v2();
		public static readonly BaseTransformation IR_Algebraic_Unsigned32AAPlusBBPlus2AB_v3 = new IR.Algebraic.Unsigned32AAPlusBBPlus2AB_v3();
		public static readonly BaseTransformation IR_Algebraic_Unsigned32AAPlusBBPlus2AB_v4 = new IR.Algebraic.Unsigned32AAPlusBBPlus2AB_v4();
		public static readonly BaseTransformation IR_Algebraic_Unsigned32AAPlusBBPlus2AB_v5 = new IR.Algebraic.Unsigned32AAPlusBBPlus2AB_v5();
		public static readonly BaseTransformation IR_Algebraic_Unsigned32AAPlusBBPlus2AB_v6 = new IR.Algebraic.Unsigned32AAPlusBBPlus2AB_v6();
		public static readonly BaseTransformation IR_Algebraic_Unsigned32AAPlusBBPlus2AB_v7 = new IR.Algebraic.Unsigned32AAPlusBBPlus2AB_v7();
		public static readonly BaseTransformation IR_Algebraic_Unsigned64AAPlusBBPlus2AB = new IR.Algebraic.Unsigned64AAPlusBBPlus2AB();
		public static readonly BaseTransformation IR_Algebraic_Unsigned64AAPlusBBPlus2AB_v1 = new IR.Algebraic.Unsigned64AAPlusBBPlus2AB_v1();
		public static readonly BaseTransformation IR_Algebraic_Unsigned64AAPlusBBPlus2AB_v2 = new IR.Algebraic.Unsigned64AAPlusBBPlus2AB_v2();
		public static readonly BaseTransformation IR_Algebraic_Unsigned64AAPlusBBPlus2AB_v3 = new IR.Algebraic.Unsigned64AAPlusBBPlus2AB_v3();
		public static readonly BaseTransformation IR_Algebraic_Unsigned64AAPlusBBPlus2AB_v4 = new IR.Algebraic.Unsigned64AAPlusBBPlus2AB_v4();
		public static readonly BaseTransformation IR_Algebraic_Unsigned64AAPlusBBPlus2AB_v5 = new IR.Algebraic.Unsigned64AAPlusBBPlus2AB_v5();
		public static readonly BaseTransformation IR_Algebraic_Unsigned64AAPlusBBPlus2AB_v6 = new IR.Algebraic.Unsigned64AAPlusBBPlus2AB_v6();
		public static readonly BaseTransformation IR_Algebraic_Unsigned64AAPlusBBPlus2AB_v7 = new IR.Algebraic.Unsigned64AAPlusBBPlus2AB_v7();
		public static readonly BaseTransformation IR_Algebraic_Signed32AAPlusBBMinus2AB = new IR.Algebraic.Signed32AAPlusBBMinus2AB();
		public static readonly BaseTransformation IR_Algebraic_Signed32AAPlusBBMinus2AB_v1 = new IR.Algebraic.Signed32AAPlusBBMinus2AB_v1();
		public static readonly BaseTransformation IR_Algebraic_Signed32AAPlusBBMinus2AB_v2 = new IR.Algebraic.Signed32AAPlusBBMinus2AB_v2();
		public static readonly BaseTransformation IR_Algebraic_Signed32AAPlusBBMinus2AB_v3 = new IR.Algebraic.Signed32AAPlusBBMinus2AB_v3();
		public static readonly BaseTransformation IR_Algebraic_Signed64AAPlusBBMinus2AB = new IR.Algebraic.Signed64AAPlusBBMinus2AB();
		public static readonly BaseTransformation IR_Algebraic_Signed64AAPlusBBMinus2AB_v1 = new IR.Algebraic.Signed64AAPlusBBMinus2AB_v1();
		public static readonly BaseTransformation IR_Algebraic_Signed64AAPlusBBMinus2AB_v2 = new IR.Algebraic.Signed64AAPlusBBMinus2AB_v2();
		public static readonly BaseTransformation IR_Algebraic_Signed64AAPlusBBMinus2AB_v3 = new IR.Algebraic.Signed64AAPlusBBMinus2AB_v3();
		public static readonly BaseTransformation IR_Algebraic_Unsigned32AAPlusBBMinus2AB = new IR.Algebraic.Unsigned32AAPlusBBMinus2AB();
		public static readonly BaseTransformation IR_Algebraic_Unsigned32AAPlusBBMinus2AB_v1 = new IR.Algebraic.Unsigned32AAPlusBBMinus2AB_v1();
		public static readonly BaseTransformation IR_Algebraic_Unsigned32AAPlusBBMinus2AB_v2 = new IR.Algebraic.Unsigned32AAPlusBBMinus2AB_v2();
		public static readonly BaseTransformation IR_Algebraic_Unsigned32AAPlusBBMinus2AB_v3 = new IR.Algebraic.Unsigned32AAPlusBBMinus2AB_v3();
		public static readonly BaseTransformation IR_Algebraic_Unsigned64AAPlusBBMinus2AB = new IR.Algebraic.Unsigned64AAPlusBBMinus2AB();
		public static readonly BaseTransformation IR_Algebraic_Unsigned64AAPlusBBMinus2AB_v1 = new IR.Algebraic.Unsigned64AAPlusBBMinus2AB_v1();
		public static readonly BaseTransformation IR_Algebraic_Unsigned64AAPlusBBMinus2AB_v2 = new IR.Algebraic.Unsigned64AAPlusBBMinus2AB_v2();
		public static readonly BaseTransformation IR_Algebraic_Unsigned64AAPlusBBMinus2AB_v3 = new IR.Algebraic.Unsigned64AAPlusBBMinus2AB_v3();
		public static readonly BaseTransformation IR_Algebraic_Signed32AAMinusBB = new IR.Algebraic.Signed32AAMinusBB();
		public static readonly BaseTransformation IR_Algebraic_Signed64AAMinusBB = new IR.Algebraic.Signed64AAMinusBB();
		public static readonly BaseTransformation IR_Algebraic_Unsigned32AAMinusBB = new IR.Algebraic.Unsigned32AAMinusBB();
		public static readonly BaseTransformation IR_Algebraic_Unsigned64AAMinusBB = new IR.Algebraic.Unsigned64AAMinusBB();
		public static readonly BaseTransformation IR_Algebraic_Unsigned32PerfectSquareFormula = new IR.Algebraic.Unsigned32PerfectSquareFormula();
		public static readonly BaseTransformation IR_Algebraic_Unsigned32PerfectSquareFormula_v1 = new IR.Algebraic.Unsigned32PerfectSquareFormula_v1();
		public static readonly BaseTransformation IR_Algebraic_Unsigned32PerfectSquareFormula_v2 = new IR.Algebraic.Unsigned32PerfectSquareFormula_v2();
		public static readonly BaseTransformation IR_Algebraic_Unsigned32PerfectSquareFormula_v3 = new IR.Algebraic.Unsigned32PerfectSquareFormula_v3();
		public static readonly BaseTransformation IR_Algebraic_Unsigned32PerfectSquareFormula_v4 = new IR.Algebraic.Unsigned32PerfectSquareFormula_v4();
		public static readonly BaseTransformation IR_Algebraic_Unsigned32PerfectSquareFormula_v5 = new IR.Algebraic.Unsigned32PerfectSquareFormula_v5();
		public static readonly BaseTransformation IR_Algebraic_Unsigned32PerfectSquareFormula_v6 = new IR.Algebraic.Unsigned32PerfectSquareFormula_v6();
		public static readonly BaseTransformation IR_Algebraic_Unsigned32PerfectSquareFormula_v7 = new IR.Algebraic.Unsigned32PerfectSquareFormula_v7();
		public static readonly BaseTransformation IR_Algebraic_Unsigned64PerfectSquareFormula = new IR.Algebraic.Unsigned64PerfectSquareFormula();
		public static readonly BaseTransformation IR_Algebraic_Unsigned64PerfectSquareFormula_v1 = new IR.Algebraic.Unsigned64PerfectSquareFormula_v1();
		public static readonly BaseTransformation IR_Algebraic_Unsigned64PerfectSquareFormula_v2 = new IR.Algebraic.Unsigned64PerfectSquareFormula_v2();
		public static readonly BaseTransformation IR_Algebraic_Unsigned64PerfectSquareFormula_v3 = new IR.Algebraic.Unsigned64PerfectSquareFormula_v3();
		public static readonly BaseTransformation IR_Algebraic_Unsigned64PerfectSquareFormula_v4 = new IR.Algebraic.Unsigned64PerfectSquareFormula_v4();
		public static readonly BaseTransformation IR_Algebraic_Unsigned64PerfectSquareFormula_v5 = new IR.Algebraic.Unsigned64PerfectSquareFormula_v5();
		public static readonly BaseTransformation IR_Algebraic_Unsigned64PerfectSquareFormula_v6 = new IR.Algebraic.Unsigned64PerfectSquareFormula_v6();
		public static readonly BaseTransformation IR_Algebraic_Unsigned64PerfectSquareFormula_v7 = new IR.Algebraic.Unsigned64PerfectSquareFormula_v7();
		public static readonly BaseTransformation IR_Algebraic_Signed32PerfectSquareFormula = new IR.Algebraic.Signed32PerfectSquareFormula();
		public static readonly BaseTransformation IR_Algebraic_Signed32PerfectSquareFormula_v1 = new IR.Algebraic.Signed32PerfectSquareFormula_v1();
		public static readonly BaseTransformation IR_Algebraic_Signed32PerfectSquareFormula_v2 = new IR.Algebraic.Signed32PerfectSquareFormula_v2();
		public static readonly BaseTransformation IR_Algebraic_Signed32PerfectSquareFormula_v3 = new IR.Algebraic.Signed32PerfectSquareFormula_v3();
		public static readonly BaseTransformation IR_Algebraic_Signed32PerfectSquareFormula_v4 = new IR.Algebraic.Signed32PerfectSquareFormula_v4();
		public static readonly BaseTransformation IR_Algebraic_Signed32PerfectSquareFormula_v5 = new IR.Algebraic.Signed32PerfectSquareFormula_v5();
		public static readonly BaseTransformation IR_Algebraic_Signed32PerfectSquareFormula_v6 = new IR.Algebraic.Signed32PerfectSquareFormula_v6();
		public static readonly BaseTransformation IR_Algebraic_Signed32PerfectSquareFormula_v7 = new IR.Algebraic.Signed32PerfectSquareFormula_v7();
		public static readonly BaseTransformation IR_Algebraic_Signed64PerfectSquareFormula = new IR.Algebraic.Signed64PerfectSquareFormula();
		public static readonly BaseTransformation IR_Algebraic_Signed64PerfectSquareFormula_v1 = new IR.Algebraic.Signed64PerfectSquareFormula_v1();
		public static readonly BaseTransformation IR_Algebraic_Signed64PerfectSquareFormula_v2 = new IR.Algebraic.Signed64PerfectSquareFormula_v2();
		public static readonly BaseTransformation IR_Algebraic_Signed64PerfectSquareFormula_v3 = new IR.Algebraic.Signed64PerfectSquareFormula_v3();
		public static readonly BaseTransformation IR_Algebraic_Signed64PerfectSquareFormula_v4 = new IR.Algebraic.Signed64PerfectSquareFormula_v4();
		public static readonly BaseTransformation IR_Algebraic_Signed64PerfectSquareFormula_v5 = new IR.Algebraic.Signed64PerfectSquareFormula_v5();
		public static readonly BaseTransformation IR_Algebraic_Signed64PerfectSquareFormula_v6 = new IR.Algebraic.Signed64PerfectSquareFormula_v6();
		public static readonly BaseTransformation IR_Algebraic_Signed64PerfectSquareFormula_v7 = new IR.Algebraic.Signed64PerfectSquareFormula_v7();
	}
}
